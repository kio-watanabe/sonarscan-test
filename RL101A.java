/* Generated by opensource COBOL 4J 1.0.19 */
import java.io.UnsupportedEncodingException;
import jp.osscons.opensourcecobol.libcobj.*;
import jp.osscons.opensourcecobol.libcobj.common.*;
import jp.osscons.opensourcecobol.libcobj.data.*;
import jp.osscons.opensourcecobol.libcobj.exceptions.*;
import jp.osscons.opensourcecobol.libcobj.termio.*;
import jp.osscons.opensourcecobol.libcobj.call.*;
import jp.osscons.opensourcecobol.libcobj.file.*;
import jp.osscons.opensourcecobol.libcobj.ui.*;
import java.util.Optional;

public class RL101A implements CobolRunnable {

  private boolean initialized = false;
  private CobolModule cobolCurrentModule;
  private CobolModule module;
  private int entry;

  private CobolRunnable cob_unifunc;


  @Override
  public int run(CobolDataStorage... argStorages) {
    return RL101A_(0, argStorages);
  }

  @Override
  public void cancel() {
    RL101A_(-1);
  }

  @Override
  public boolean isActive() {
    return false;
  }

  public CobolResultSet execute () {
    int returnCode = run_module(0);
    return new CobolResultSet(returnCode);
  }

  public int RL101A_ (int entry, CobolDataStorage ...argStorages) {
    this.entry = entry;
    return this.run_module(entry);
  }

  int run_module (int entry) {
    this.module = new CobolModule(null, null, null, null, 0, '.', '$', ',', 1, 1, 1, 0, null );

    /* Start of function code */

    /* CANCEL callback handling */
    if (entry < 0) {
    	if (!this.initialized) {
    		CobolDecimal.cobInitNumeric();
    		return 0;
    	}
    	h_PRINT_FILE.close (0, null);
    	h_RL_FS2.close (0, null);
    	this.initialized = false;
    	return 0;
    }

    /* Push module stack */
    CobolModule.push (module);

    /* Initialize program */
    if (!this.initialized) {
      module.setProgramId("RL101A");

      b_RETURN_CODE.set((int)0);
      b_RL_FS2_STATUS.fillBytes(' ', 2);
      b_WRK_CS_09V00.fillBytes (0, 4);
      b_WORK$2__FILE_RECORD_INFO_SKELETON__FILE_RECORD_INFORMATION_REC.setBytes (str_0_FILE, 48);

      b_WORK$3__FILE_RECORD_INFO_SKELETON__FILE_RECORD_INFORMATION_REC.memcpy(str_1, 42);
      b_WORK$3__FILE_RECORD_INFO_SKELETON__FILE_RECORD_INFORMATION_REC.memset(42, 48, 4);
      b_WORK$4__FILE_RECORD_INFO_SKELETON__FILE_RECORD_INFORMATION_REC.setBytes (str_2, 26);

      b_WORK$5__FILE_RECORD_INFO_SKELETON__FILE_RECORD_INFORMATION_REC.memcpy(str_3, 8);
      b_WORK$5__FILE_RECORD_INFO_SKELETON__FILE_RECORD_INFORMATION_REC.memset(8, 32, 29);
      b_WORK$6__FILE_RECORD_INFO_SKELETON__FILE_RECORD_INFORMATION_REC.memcpy(str_4, 9);
      b_WORK$6__FILE_RECORD_INFO_SKELETON__FILE_RECORD_INFORMATION_REC.memset(9, 32, 29);
      b_WORK$7__FILE_RECORD_INFO_SKELETON__FILE_RECORD_INFORMATION_REC.memcpy(str_5, 9);
      b_WORK$7__FILE_RECORD_INFO_SKELETON__FILE_RECORD_INFORMATION_REC.memset(9, 32, 29);
      b_WORK$8__FILE_RECORD_INFO_SKELETON__FILE_RECORD_INFORMATION_REC.fillBytes (32, 7);


      for (int i1 = 1; i1 <= 10; i1++)
        {
          b_WORK$9__FILE_RECORD_INFO_P1_120__FILE_RECORD_INFO__FILE_RECORD_INFORMATION_REC.getSubDataStorage(240 * (i1 - 1)).fillBytes(' ', 26);
          b_REELUNIT_NUMBER__FILE_RECORD_INFO_P1_120__FILE_RECORD_INFO__FILE_RECORD_INFORMATION_REC.getSubDataStorage(240 * (i1 - 1)).setByte('0');
          b_WORK$12__FILE_RECORD_INFO_P1_120__FILE_RECORD_INFO__FILE_RECORD_INFORMATION_REC.getSubDataStorage(240 * (i1 - 1)).fillBytes(' ', 7);
          b_XRECORD_NUMBER__FILE_RECORD_INFO_P1_120__FILE_RECORD_INFO__FILE_RECORD_INFORMATION_REC.getSubDataStorage(240 * (i1 - 1)).fillBytes('0', 6);
          b_WORK$13__FILE_RECORD_INFO_P1_120__FILE_RECORD_INFO__FILE_RECORD_INFORMATION_REC.getSubDataStorage(240 * (i1 - 1)).fillBytes(' ', 6);
          b_UPDATE_NUMBER__FILE_RECORD_INFO_P1_120__FILE_RECORD_INFO__FILE_RECORD_INFORMATION_REC.getSubDataStorage(240 * (i1 - 1)).fillBytes('0', 2);
          b_WORK$14__FILE_RECORD_INFO_P1_120__FILE_RECORD_INFO__FILE_RECORD_INFORMATION_REC.getSubDataStorage(240 * (i1 - 1)).fillBytes(' ', 5);
          b_ODO_NUMBER__FILE_RECORD_INFO_P1_120__FILE_RECORD_INFO__FILE_RECORD_INFORMATION_REC.getSubDataStorage(240 * (i1 - 1)).fillBytes('0', 4);
          b_WORK$15__FILE_RECORD_INFO_P1_120__FILE_RECORD_INFO__FILE_RECORD_INFORMATION_REC.getSubDataStorage(240 * (i1 - 1)).fillBytes(' ', 17);
          b_XRECORD_LENGTH__FILE_RECORD_INFO_P1_120__FILE_RECORD_INFO__FILE_RECORD_INFORMATION_REC.getSubDataStorage(240 * (i1 - 1)).fillBytes('0', 6);
          b_WORK$17__FILE_RECORD_INFO_P1_120__FILE_RECORD_INFO__FILE_RECORD_INFORMATION_REC.getSubDataStorage(240 * (i1 - 1)).fillBytes(' ', 10);
          b_XBLOCK_SIZE__FILE_RECORD_INFO_P1_120__FILE_RECORD_INFO__FILE_RECORD_INFORMATION_REC.getSubDataStorage(240 * (i1 - 1)).fillBytes('0', 4);
          b_WORK$19__FILE_RECORD_INFO_P1_120__FILE_RECORD_INFO__FILE_RECORD_INFORMATION_REC.getSubDataStorage(240 * (i1 - 1)).fillBytes(' ', 6);
          b_RECORDS_IN_FILE__FILE_RECORD_INFO_P1_120__FILE_RECORD_INFO__FILE_RECORD_INFORMATION_REC.getSubDataStorage(240 * (i1 - 1)).fillBytes('0', 6);
          b_WORK$20__FILE_RECORD_INFO_P1_120__FILE_RECORD_INFO__FILE_RECORD_INFORMATION_REC.getSubDataStorage(240 * (i1 - 1)).fillBytes(' ', 14);

          b_FILE_RECORD_INFO_P121_240__FILE_RECORD_INFO__FILE_RECORD_INFORMATION_REC.getSubDataStorage(240 * (i1 - 1)).fillBytes(' ', 120);

        }
      b_WORK$26__TEST_RESULTS.setByte(0, ' ');

      b_FEATURE__TEST_RESULTS.fillBytes (32, 20);

      b_WORK$27__TEST_RESULTS.setByte(0, ' ');

      b_P_OR_F__TEST_RESULTS.fillBytes (32, 5);

      b_WORK$28__TEST_RESULTS.setByte(0, ' ');

      b_WORK$29__PAR_NAME__TEST_RESULTS.fillBytes (32, 19);

      b_PARDOT_X__PAR_NAME__TEST_RESULTS.setByte(0, ' ');

      b_DOTVALUE__PAR_NAME__TEST_RESULTS.fillBytes (48, 2);


      b_WORK$30__TEST_RESULTS.fillBytes (32, 8);

      b_RE_MARK__TEST_RESULTS.fillBytes(' ', 61);
      b_WORK$31__TEST_COMPUTED.fillBytes (32, 30);

      b_WORK$32__TEST_COMPUTED.setBytes (str_6, 17);

      b_COMPUTED_A__COMPUTED_X__TEST_COMPUTED.fillBytes (32, 20);

      b_WORK$34__COMPUTED_X__TEST_COMPUTED.fillBytes (32, 50);


      b_WORK$35__TEST_CORRECT.fillBytes (32, 30);

      b_WORK$36__TEST_CORRECT.setBytes (str_7, 17);

      b_CORRECT_A__CORRECT_X__TEST_CORRECT.fillBytes (32, 20);

      b_WORK$38__CORRECT_X__TEST_CORRECT.fillBytes (32, 2);

      b_COR_ANSI_REFERENCE__CORRECT_X__TEST_CORRECT.fillBytes (32, 48);


      b_WORK$39__CCVS_C_1.setBytes (str_8, 99);

      b_WORK$40__CCVS_C_1.fillBytes (32, 20);

      b_WORK$41__CCVS_C_2.setByte(0, ' ');

      b_WORK$42__CCVS_C_2.setBytes (str_9_TESTED, 6);

      b_WORK$43__CCVS_C_2.fillBytes (32, 15);

      b_WORK$44__CCVS_C_2.setBytes (str_10_FAIL, 4);

      b_WORK$45__CCVS_C_2.fillBytes (32, 94);

      b_REC_SKL_SUB.fillBytes (48, 2);
      b_REC_CT.fillBytes (48, 2);
      b_DELETE_COUNTER.fillBytes (48, 3);
      b_ERROR_COUNTER.fillBytes (48, 3);
      b_INSPECT_COUNTER.fillBytes (48, 3);
      b_PASS_COUNTER.fillBytes (48, 3);
      b_TOTAL_ERROR.fillBytes (48, 3);
      b_ERROR_HOLD.fillBytes (48, 3);
      b_DUMMY_HOLD.fillBytes (32, 120);
      b_RECORD_COUNT.fillBytes (48, 5);
      b_ANSI_REFERENCE.fillBytes (32, 48);
      b_WORK$46__CCVS_H_1.fillBytes (32, 39);

      b_WORK$47__CCVS_H_1.setBytes (str_11_OFFICIAL, 42);

      b_WORK$48__CCVS_H_1.fillBytes (32, 39);

      b_WORK$49__CCVS_H_2A.fillBytes (32, 40);

      b_WORK$50__CCVS_H_2A.setBytes (str_12_CCVS85, 7);

      b_WORK$51__CCVS_H_2A.setBytes (str_13_4, 4);

      b_WORK$52__CCVS_H_2A.setBytes (str_14, 28);

      b_WORK$53__CCVS_H_2A.fillBytes (32, 41);

      b_WORK$54__CCVS_H_2B.setBytes (str_15_TEST, 15);

      b_TEST_ID__CCVS_H_2B.fillBytes(' ', 9);
      b_WORK$55__CCVS_H_2B.setBytes (str_16, 4);

      b_WORK$56__CCVS_H_2B.memcpy(str_17, 5);
      b_WORK$56__CCVS_H_2B.memset(5, 32, 7);
      b_WORK$57__CCVS_H_2B.setBytes (str_18, 22);

      b_WORK$58__CCVS_H_2B.memcpy(str_19_ON, 53);
      b_WORK$58__CCVS_H_2B.memset(53, 32, 5);
      b_WORK$59__CCVS_H_3.memcpy(str_20, 22);
      b_WORK$59__CCVS_H_3.memset(22, 32, 12);
      b_WORK$60__CCVS_H_3.memcpy(str_21_COBOL, 36);
      b_WORK$60__CCVS_H_3.memset(36, 32, 22);
      b_WORK$61__CCVS_H_3.memcpy(str_22, 18);
      b_WORK$61__CCVS_H_3.memset(18, 32, 10);
      b_WORK$62__CCVS_E_1.fillBytes (32, 52);

      b_WORK$63__CCVS_E_1.setBytes (str_23_END, 14);

      b_ID_AGAIN__CCVS_E_1.fillBytes(' ', 9);
      b_WORK$64__CCVS_E_1.fillBytes (32, 45);

      b_WORK$65__CCVS_E_2.fillBytes (32, 31);

      b_WORK$66__CCVS_E_2.fillBytes (32, 21);

      b_ERROR_TOTAL__CCVS_E_2_2__CCVS_E_2.fillBytes (32, 3);

      b_WORK$67__CCVS_E_2_2__CCVS_E_2.setByte(0, ' ');

      b_ENDER_DESC__CCVS_E_2_2__CCVS_E_2.memcpy(str_24_ERRORS, 18);
      b_ENDER_DESC__CCVS_E_2_2__CCVS_E_2.memset(18, 32, 26);

      b_WORK$68__CCVS_E_3.setBytes (str_25, 22);

      b_WORK$69__CCVS_E_3.fillBytes (32, 12);

      b_WORK$70__CCVS_E_3.memcpy(str_26_ON, 53);
      b_WORK$70__CCVS_E_3.memset(53, 32, 5);
      b_WORK$71__CCVS_E_3.fillBytes (32, 13);

      b_WORK$72__CCVS_E_3.setBytes (str_27, 15);

      b_CCVS_E_4_1__CCVS_E_4.fillBytes (32, 3);

      b_WORK$73__CCVS_E_4.setBytes (str_28, 4);

      b_CCVS_E_4_2__CCVS_E_4.fillBytes (32, 3);

      b_WORK$74__CCVS_E_4.memcpy(str_29, 34);
      b_WORK$74__CCVS_E_4.memset(34, 32, 6);
      b_WORK$75__XXINFO.memcpy(str_30, 16);
      b_WORK$75__XXINFO.memset(16, 42, 3);
      b_WORK$76__INFO_TEXT__XXINFO.fillBytes (32, 8);

      b_XXCOMPUTED__INFO_TEXT__XXINFO.fillBytes(' ', 20);
      b_WORK$77__INFO_TEXT__XXINFO.fillBytes (32, 5);

      b_XXCORRECT__INFO_TEXT__XXINFO.fillBytes(' ', 20);

      b_INF_ANSI_REFERENCE__XXINFO.fillBytes(' ', 48);
      b_WORK$78__HYPHEN_LINE.setByte(0, ' ');

      b_WORK$79__HYPHEN_LINE.fillBytes(42, 65);

      b_WORK$80__HYPHEN_LINE.fillBytes(42, 54);

      b_CCVS_PGM_ID.memcpy(str_31_RL101A, 6);
      b_CCVS_PGM_ID.memset(6, 32, 3);
      h_PRINT_FILE = CobolFileFactory.makeCobolFileInstance(
      /* select_name = */ "PRINT-FILE",
      /* file_status = */ h_PRINT_FILE_status,
      /* assign = */ c_1_report,
      /* record = */ f_PRINT_FILE_record,
      /* record_size = */ null,
      /* record_min = */ 120,
      /* record_max = */ 120,
      /* nkeys = */ 0,
      /* keys = */ null,
      /* organization = */ (char)0,
      /* access_mode = */ (char)1,
      /* lock_mode = */ (char)0,
      /* open_mode = */ (char)0,
      /* flag_optional = */ false,
      /* last_open_mode = */ (char)0,
      /* special = */ (char)0,
      /* flag_nonexistent = */ false,
      /* flag_end_of_file = */ false,
      /* flag_begin_of_file = */ false,
      /* flag_first_read = */ (char)0,
      /* flag_read_done = */ false,
      /* flag_select_features = */ (char)0,
      /* flag_needs_nl = */ false,
      /* flag_needs_top = */ false,
      /* file_version = */ (char)0
      );
      if (k_RL_FS2 == null)
      {
        k_RL_FS2 = new CobolFileKey[1];
        for (int i=0; i<1; ++i)
          k_RL_FS2[i] = new CobolFileKey();
      }
      k_RL_FS2[0].setField(null);
      k_RL_FS2[0].setFlag(0);
      k_RL_FS2[0].setOffset(0);
      h_RL_FS2 = CobolFileFactory.makeCobolFileInstance(
      /* select_name = */ "RL-FS2",
      /* file_status = */ h_RL_FS2_status,
      /* assign = */ c_2_XXXXX021,
      /* record = */ f_RL_FS2_record,
      /* record_size = */ null,
      /* record_min = */ 120,
      /* record_max = */ 120,
      /* nkeys = */ 1,
      /* keys = */ k_RL_FS2,
      /* organization = */ (char)2,
      /* access_mode = */ (char)1,
      /* lock_mode = */ (char)0,
      /* open_mode = */ (char)0,
      /* flag_optional = */ false,
      /* last_open_mode = */ (char)0,
      /* special = */ (char)0,
      /* flag_nonexistent = */ false,
      /* flag_end_of_file = */ false,
      /* flag_begin_of_file = */ false,
      /* flag_first_read = */ (char)0,
      /* flag_read_done = */ false,
      /* flag_select_features = */ (char)1,
      /* flag_needs_nl = */ false,
      /* flag_needs_top = */ false,
      /* file_version = */ (char)0
      );

      this.initialized = true;
    }
    /* PROCEDURE DIVISION */
    try{
      CobolStopRunException.dummy();
      CobolGoBackException.dummy();
      /* Entry dispatch */
      execEntry(l_RL101A);

    } catch(CobolGoBackException e) {
      return e.getReturnCode();
    } catch(CobolStopRunException e) {
      CobolStopRunException.stopRun();
      System.exit(e.getReturnCode());
    }
    /* Pop module stack */
    CobolModule.pop();

    /* Program return */
    return b_RETURN_CODE.intValue();
  }
  public CobolControl[] contList = {
    new CobolControl(0, CobolControl.LabelType.label) {
      public Optional<CobolControl> run() throws CobolRuntimeException, CobolGoBackException, CobolStopRunException {

        return Optional.of(contList[l_RL101A]);
      }
    },
    /* Entry RL101A */
    new CobolControl(l_RL101A, CobolControl.LabelType.label) {
      public Optional<CobolControl> run() throws CobolRuntimeException, CobolGoBackException, CobolStopRunException {

        return Optional.of(contList[l_CCVS1]);
      }
    },
    /* CCVS1 SECTION */
    new CobolControl(l_CCVS1, CobolControl.LabelType.section) {
      public Optional<CobolControl> run() throws CobolRuntimeException, CobolGoBackException, CobolStopRunException {

        return Optional.of(contList[l_CCVS1__OPEN_FILES]);
      }
    },
    /* OPEN-FILES */
    new CobolControl(l_CCVS1__OPEN_FILES, CobolControl.LabelType.label) {
      public Optional<CobolControl> run() throws CobolRuntimeException, CobolGoBackException, CobolStopRunException {
        /* RL101A.CBL:276: OPEN */
        {
          CobolRuntimeException.code = 0;
          {
            h_PRINT_FILE.open (2, 1, null);
          }
          if (CobolRuntimeException.code != 0)
            {
              /* PERFORM Default Error Handler */
              CobolControl.perform(contList, l_Default_Error_Handler).run();
            }
        }
        /* RL101A.CBL:277: MOVE */
        {
          b_TEST_ID__CCVS_H_2B.setBytes (b_CCVS_PGM_ID, 9);
        }
        /* RL101A.CBL:277: MOVE */
        {
          b_ID_AGAIN__CCVS_E_1.setBytes (b_CCVS_PGM_ID, 9);
        }
        /* RL101A.CBL:278: MOVE */
        {
          b_TEST_RESULTS.fillBytes (32, 119);
        }
        /* RL101A.CBL:279: PERFORM */
        /* PERFORM HEAD-ROUTINE THRU COLUMN-NAMES-ROUTINE */
        CobolControl.performThrough(contList, 
l_CCVS1__HEAD_ROUTINE, l_CCVS1__COLUMN_NAMES_ROUTINE).run();
        /* RL101A.CBL:280: MOVE */
        {
          b_REC_SKL_SUB.fillBytes (48, 2);
        }
        /* RL101A.CBL:281: PERFORM */
        for (int n0 = 9; n0 > 0; n0--)
          {
            /* PERFORM CCVS-INIT-FILE */
            CobolControl.perform(contList, l_CCVS1__CCVS_INIT_FILE).run();
          }

        return Optional.of(contList[l_CCVS1__CCVS_INIT_FILE]);
      }
    },
    /* CCVS-INIT-FILE */
    new CobolControl(l_CCVS1__CCVS_INIT_FILE, CobolControl.LabelType.label) {
      public Optional<CobolControl> run() throws CobolRuntimeException, CobolGoBackException, CobolStopRunException {
        /* RL101A.CBL:283: ADD */
        {
          f_REC_SKL_SUB.add (c_3_1, 4);
        }
        /* RL101A.CBL:284: MOVE */
        {
          b_FILE_RECORD_INFO__FILE_RECORD_INFORMATION_REC.getSubDataStorage(240 * (b_REC_SKL_SUB.getNumdisp(2) - 1)).setBytes (b_FILE_RECORD_INFO_SKELETON__FILE_RECORD_INFORMATION_REC, 240);
        }

        return Optional.of(contList[l_CCVS1__CCVS_INIT_EXIT]);
      }
    },
    /* CCVS-INIT-EXIT */
    new CobolControl(l_CCVS1__CCVS_INIT_EXIT, CobolControl.LabelType.label) {
      public Optional<CobolControl> run() throws CobolRuntimeException, CobolGoBackException, CobolStopRunException {
        /* RL101A.CBL:287: GO TO */
        {
          if(true) return Optional.of(contList[l_CCVS1__CCVS1_EXIT          ]);

        }

        return Optional.of(contList[l_CCVS1__CLOSE_FILES]);
      }
    },
    /* CLOSE-FILES */
    new CobolControl(l_CCVS1__CLOSE_FILES, CobolControl.LabelType.label) {
      public Optional<CobolControl> run() throws CobolRuntimeException, CobolGoBackException, CobolStopRunException {
        /* RL101A.CBL:289: PERFORM */
        /* PERFORM END-ROUTINE THRU END-ROUTINE-13 */
        CobolControl.performThrough(contList, 
l_CCVS1__END_ROUTINE, l_CCVS1__END_ROUTINE_13).run();
        /* RL101A.CBL:289: CLOSE */
        {
          CobolRuntimeException.code = 0;
          {
            h_PRINT_FILE.close (0, null);
          }
          if (CobolRuntimeException.code != 0)
            {
              /* PERFORM Default Error Handler */
              CobolControl.perform(contList, l_Default_Error_Handler).run();
            }
        }

        return Optional.of(contList[l_CCVS1__TERMINATE_CCVS]);
      }
    },
    /* TERMINATE-CCVS */
    new CobolControl(l_CCVS1__TERMINATE_CCVS, CobolControl.LabelType.label) {
      public Optional<CobolControl> run() throws CobolRuntimeException, CobolGoBackException, CobolStopRunException {
        /* RL101A.CBL:293: STOP */
        {
          CobolStopRunException.throwException (b_RETURN_CODE.intValue());
        }

        return Optional.of(contList[l_CCVS1__INSPT]);
      }
    },
    /* INSPT */
    new CobolControl(l_CCVS1__INSPT, CobolControl.LabelType.label) {
      public Optional<CobolControl> run() throws CobolRuntimeException, CobolGoBackException, CobolStopRunException {
        /* RL101A.CBL:294: MOVE */
        {
          b_P_OR_F__TEST_RESULTS.setBytes (str_32_INSPT, 5);
        }
        /* RL101A.CBL:294: ADD */
        {
          f_INSPECT_COUNTER.add (c_3_1, 4);
        }

        return Optional.of(contList[l_CCVS1__PASS]);
      }
    },
    /* PASS */
    new CobolControl(l_CCVS1__PASS, CobolControl.LabelType.label) {
      public Optional<CobolControl> run() throws CobolRuntimeException, CobolGoBackException, CobolStopRunException {
        /* RL101A.CBL:295: MOVE */
        {
          b_P_OR_F__TEST_RESULTS.setBytes (str_33_PASS, 5);
        }
        /* RL101A.CBL:295: ADD */
        {
          f_PASS_COUNTER.add (c_3_1, 4);
        }

        return Optional.of(contList[l_CCVS1__FAIL]);
      }
    },
    /* FAIL */
    new CobolControl(l_CCVS1__FAIL, CobolControl.LabelType.label) {
      public Optional<CobolControl> run() throws CobolRuntimeException, CobolGoBackException, CobolStopRunException {
        /* RL101A.CBL:296: MOVE */
        {
          b_P_OR_F__TEST_RESULTS.setBytes (str_34_FAIL, 5);
        }
        /* RL101A.CBL:296: ADD */
        {
          f_ERROR_COUNTER.add (c_3_1, 4);
        }

        return Optional.of(contList[l_CCVS1__DE_LETE]);
      }
    },
    /* DE-LETE */
    new CobolControl(l_CCVS1__DE_LETE, CobolControl.LabelType.label) {
      public Optional<CobolControl> run() throws CobolRuntimeException, CobolGoBackException, CobolStopRunException {
        /* RL101A.CBL:297: MOVE */
        {
          b_P_OR_F__TEST_RESULTS.fillBytes (42, 5);
        }
        /* RL101A.CBL:297: ADD */
        {
          f_DELETE_COUNTER.add (c_3_1, 4);
        }
        /* RL101A.CBL:298: MOVE */
        {
          f_RE_MARK__TEST_RESULTS.moveFrom (c_4);
        }

        return Optional.of(contList[l_CCVS1__PRINT_DETAIL]);
      }
    },
    /* PRINT-DETAIL */
    new CobolControl(l_CCVS1__PRINT_DETAIL, CobolControl.LabelType.label) {
      public Optional<CobolControl> run() throws CobolRuntimeException, CobolGoBackException, CobolStopRunException {
        /* RL101A.CBL:300: IF */
        {
          if (((long)b_REC_CT.cmpNumdisp (2, 0) != 0L))
            {
              /* RL101A.CBL:301: MOVE */
              {
                b_PARDOT_X__PAR_NAME__TEST_RESULTS.setByte(46);
              }
              /* RL101A.CBL:302: MOVE */
              {
                b_DOTVALUE__PAR_NAME__TEST_RESULTS.setBytes (b_REC_CT, 2);
              }
            }
        }
        /* RL101A.CBL:303: MOVE */
        {
          f_PRINT_REC.moveFrom (f_TEST_RESULTS);
        }
        /* RL101A.CBL:303: PERFORM */
        /* PERFORM WRITE-LINE */
        CobolControl.perform(contList, l_CCVS1__WRITE_LINE).run();
        /* RL101A.CBL:304: IF */
        {
          if (((long)b_P_OR_F__TEST_RESULTS.memcmp (str_35_FAIL, 5) == 0L))
            {
              /* RL101A.CBL:304: PERFORM */
              /* PERFORM WRITE-LINE */
              CobolControl.perform(contList, l_CCVS1__WRITE_LINE).run();
              /* RL101A.CBL:305: PERFORM */
              /* PERFORM FAIL-ROUTINE THRU FAIL-ROUTINE-EX */
              CobolControl.performThrough(contList, 
l_CCVS1__FAIL_ROUTINE, l_CCVS1__FAIL_ROUTINE_EX).run();
            }
          else
            {
              /* RL101A.CBL:306: PERFORM */
              /* PERFORM BAIL-OUT THRU BAIL-OUT-EX */
              CobolControl.performThrough(contList, 
l_CCVS1__BAIL_OUT, l_CCVS1__BAIL_OUT_EX).run();
            }
        }
        /* RL101A.CBL:307: MOVE */
        {
          b_P_OR_F__TEST_RESULTS.fillBytes (32, 5);
        }
        /* RL101A.CBL:307: MOVE */
        {
          b_COMPUTED_X__TEST_COMPUTED.fillBytes (32, 70);
        }
        /* RL101A.CBL:308: MOVE */
        {
          b_CORRECT_X__TEST_CORRECT.fillBytes (32, 70);
        }
        /* RL101A.CBL:309: IF */
        {
          if (((long)b_REC_CT.cmpNumdisp (2, 0) == 0L))
            {
              /* RL101A.CBL:309: MOVE */
              {
                b_PAR_NAME__TEST_RESULTS.fillBytes (32, 22);
              }
            }
        }
        /* RL101A.CBL:310: MOVE */
        {
          b_RE_MARK__TEST_RESULTS.fillBytes (32, 61);
        }

        return Optional.of(contList[l_CCVS1__HEAD_ROUTINE]);
      }
    },
    /* HEAD-ROUTINE */
    new CobolControl(l_CCVS1__HEAD_ROUTINE, CobolControl.LabelType.label) {
      public Optional<CobolControl> run() throws CobolRuntimeException, CobolGoBackException, CobolStopRunException {
        /* RL101A.CBL:312: MOVE */
        {
          b_DUMMY_RECORD.setBytes (b_CCVS_H_1, 120);
        }
        /* RL101A.CBL:312: PERFORM */
        for (int n1 = 2; n1 > 0; n1--)
          {
            /* PERFORM WRITE-LINE */
            CobolControl.perform(contList, l_CCVS1__WRITE_LINE).run();
          }
        /* RL101A.CBL:313: MOVE */
        {
          b_DUMMY_RECORD.setBytes (b_CCVS_H_2A, 120);
        }
        /* RL101A.CBL:313: PERFORM */
        for (int n2 = 2; n2 > 0; n2--)
          {
            /* PERFORM WRITE-LINE */
            CobolControl.perform(contList, l_CCVS1__WRITE_LINE).run();
          }
        /* RL101A.CBL:314: MOVE */
        {
          b_DUMMY_RECORD.setBytes (b_CCVS_H_2B, 120);
        }
        /* RL101A.CBL:314: PERFORM */
        for (int n3 = 3; n3 > 0; n3--)
          {
            /* PERFORM WRITE-LINE */
            CobolControl.perform(contList, l_CCVS1__WRITE_LINE).run();
          }
        /* RL101A.CBL:315: MOVE */
        {
          b_DUMMY_RECORD.setBytes (b_CCVS_H_3, 120);
        }
        /* RL101A.CBL:315: PERFORM */
        for (int n4 = 3; n4 > 0; n4--)
          {
            /* PERFORM WRITE-LINE */
            CobolControl.perform(contList, l_CCVS1__WRITE_LINE).run();
          }

        return Optional.of(contList[l_CCVS1__COLUMN_NAMES_ROUTINE]);
      }
    },
    /* COLUMN-NAMES-ROUTINE */
    new CobolControl(l_CCVS1__COLUMN_NAMES_ROUTINE, CobolControl.LabelType.label) {
      public Optional<CobolControl> run() throws CobolRuntimeException, CobolGoBackException, CobolStopRunException {
        /* RL101A.CBL:317: MOVE */
        {
          f_DUMMY_RECORD.moveFrom (f_CCVS_C_1);
        }
        /* RL101A.CBL:317: PERFORM */
        /* PERFORM WRITE-LINE */
        CobolControl.perform(contList, l_CCVS1__WRITE_LINE).run();
        /* RL101A.CBL:318: MOVE */
        {
          b_DUMMY_RECORD.setBytes (b_CCVS_C_2, 120);
        }
        /* RL101A.CBL:318: PERFORM */
        for (int n5 = 2; n5 > 0; n5--)
          {
            /* PERFORM WRITE-LINE */
            CobolControl.perform(contList, l_CCVS1__WRITE_LINE).run();
          }
        /* RL101A.CBL:319: MOVE */
        {
          b_DUMMY_RECORD.setBytes (b_HYPHEN_LINE, 120);
        }
        /* RL101A.CBL:319: PERFORM */
        /* PERFORM WRITE-LINE */
        CobolControl.perform(contList, l_CCVS1__WRITE_LINE).run();

        return Optional.of(contList[l_CCVS1__END_ROUTINE]);
      }
    },
    /* END-ROUTINE */
    new CobolControl(l_CCVS1__END_ROUTINE, CobolControl.LabelType.label) {
      public Optional<CobolControl> run() throws CobolRuntimeException, CobolGoBackException, CobolStopRunException {
        /* RL101A.CBL:321: MOVE */
        {
          b_DUMMY_RECORD.setBytes (b_HYPHEN_LINE, 120);
        }
        /* RL101A.CBL:321: PERFORM */
        for (int n6 = 5; n6 > 0; n6--)
          {
            /* PERFORM WRITE-LINE */
            CobolControl.perform(contList, l_CCVS1__WRITE_LINE).run();
          }

        return Optional.of(contList[l_CCVS1__END_RTN_EXIT]);
      }
    },
    /* END-RTN-EXIT */
    new CobolControl(l_CCVS1__END_RTN_EXIT, CobolControl.LabelType.label) {
      public Optional<CobolControl> run() throws CobolRuntimeException, CobolGoBackException, CobolStopRunException {
        /* RL101A.CBL:323: MOVE */
        {
          b_DUMMY_RECORD.setBytes (b_CCVS_E_1, 120);
        }
        /* RL101A.CBL:323: PERFORM */
        for (int n7 = 2; n7 > 0; n7--)
          {
            /* PERFORM WRITE-LINE */
            CobolControl.perform(contList, l_CCVS1__WRITE_LINE).run();
          }

        return Optional.of(contList[l_CCVS1__END_ROUTINE_1]);
      }
    },
    /* END-ROUTINE-1 */
    new CobolControl(l_CCVS1__END_ROUTINE_1, CobolControl.LabelType.label) {
      public Optional<CobolControl> run() throws CobolRuntimeException, CobolGoBackException, CobolStopRunException {
        /* RL101A.CBL:325: ADD */
        {
          f_ERROR_HOLD.add (f_ERROR_COUNTER, 4);
        }
        /* RL101A.CBL:325: ADD */
        {
          f_ERROR_HOLD.add (f_INSPECT_COUNTER, 4);
        }
        /* RL101A.CBL:326: ADD */
        {
          f_ERROR_HOLD.add (f_DELETE_COUNTER, 4);
        }
        /* RL101A.CBL:327: ADD */
        {
          f_ERROR_HOLD.add (f_PASS_COUNTER, 4);
        }
        /* RL101A.CBL:329: MOVE */
        {
          b_CCVS_E_4_1__CCVS_E_4.setBytes (b_PASS_COUNTER, 3);
        }
        /* RL101A.CBL:330: MOVE */
        {
          b_CCVS_E_4_2__CCVS_E_4.setBytes (b_ERROR_HOLD, 3);
        }
        /* RL101A.CBL:331: MOVE */
        {
          b_CCVS_E_2_2__CCVS_E_2.setBytes (b_CCVS_E_4, 48);
        }
        /* RL101A.CBL:332: MOVE */
        {
          f_DUMMY_RECORD.moveFrom (f_CCVS_E_2);
        }
        /* RL101A.CBL:332: PERFORM */
        /* PERFORM WRITE-LINE */
        CobolControl.perform(contList, l_CCVS1__WRITE_LINE).run();

        return Optional.of(contList[l_CCVS1__END_ROUTINE_12]);
      }
    },
    /* END-ROUTINE-12 */
    new CobolControl(l_CCVS1__END_ROUTINE_12, CobolControl.LabelType.label) {
      public Optional<CobolControl> run() throws CobolRuntimeException, CobolGoBackException, CobolStopRunException {
        /* RL101A.CBL:334: MOVE */
        {
          f_ENDER_DESC__CCVS_E_2_2__CCVS_E_2.moveFrom (c_5_TEST);
        }
        /* RL101A.CBL:335: IF */
        {
          if (((long)b_ERROR_COUNTER.cmpNumdisp (3, 0) == 0L))
            {
              /* RL101A.CBL:336: MOVE */
              {
                b_ERROR_TOTAL__CCVS_E_2_2__CCVS_E_2.setBytes (str_36_NO, 3);
              }
            }
          else
            {
              /* RL101A.CBL:338: MOVE */
              {
                b_ERROR_TOTAL__CCVS_E_2_2__CCVS_E_2.setBytes (b_ERROR_COUNTER, 3);
              }
            }
        }
        /* RL101A.CBL:339: MOVE */
        {
          f_DUMMY_RECORD.moveFrom (f_CCVS_E_2);
        }
        /* RL101A.CBL:340: PERFORM */
        /* PERFORM WRITE-LINE */
        CobolControl.perform(contList, l_CCVS1__WRITE_LINE).run();

        return Optional.of(contList[l_CCVS1__END_ROUTINE_13]);
      }
    },
    /* END-ROUTINE-13 */
    new CobolControl(l_CCVS1__END_ROUTINE_13, CobolControl.LabelType.label) {
      public Optional<CobolControl> run() throws CobolRuntimeException, CobolGoBackException, CobolStopRunException {
        /* RL101A.CBL:342: IF */
        {
          if (((long)b_DELETE_COUNTER.cmpNumdisp (3, 0) == 0L))
            {
              /* RL101A.CBL:343: MOVE */
              {
                b_ERROR_TOTAL__CCVS_E_2_2__CCVS_E_2.setBytes (str_37_NO, 3);
              }
            }
          else
            {
              /* RL101A.CBL:344: MOVE */
              {
                b_ERROR_TOTAL__CCVS_E_2_2__CCVS_E_2.setBytes (b_DELETE_COUNTER, 3);
              }
            }
        }
        /* RL101A.CBL:345: MOVE */
        {
          f_ENDER_DESC__CCVS_E_2_2__CCVS_E_2.moveFrom (c_6_TEST);
        }
        /* RL101A.CBL:346: MOVE */
        {
          f_DUMMY_RECORD.moveFrom (f_CCVS_E_2);
        }
        /* RL101A.CBL:346: PERFORM */
        /* PERFORM WRITE-LINE */
        CobolControl.perform(contList, l_CCVS1__WRITE_LINE).run();
        /* RL101A.CBL:347: IF */
        {
          if (((long)b_INSPECT_COUNTER.cmpNumdisp (3, 0) == 0L))
            {
              /* RL101A.CBL:348: MOVE */
              {
                b_ERROR_TOTAL__CCVS_E_2_2__CCVS_E_2.setBytes (str_38_NO, 3);
              }
            }
          else
            {
              /* RL101A.CBL:349: MOVE */
              {
                b_ERROR_TOTAL__CCVS_E_2_2__CCVS_E_2.setBytes (b_INSPECT_COUNTER, 3);
              }
            }
        }
        /* RL101A.CBL:350: MOVE */
        {
          f_ENDER_DESC__CCVS_E_2_2__CCVS_E_2.moveFrom (c_7_TEST);
        }
        /* RL101A.CBL:351: MOVE */
        {
          f_DUMMY_RECORD.moveFrom (f_CCVS_E_2);
        }
        /* RL101A.CBL:351: PERFORM */
        /* PERFORM WRITE-LINE */
        CobolControl.perform(contList, l_CCVS1__WRITE_LINE).run();
        /* RL101A.CBL:352: MOVE */
        {
          b_DUMMY_RECORD.setBytes (b_CCVS_E_3, 120);
        }
        /* RL101A.CBL:352: PERFORM */
        /* PERFORM WRITE-LINE */
        CobolControl.perform(contList, l_CCVS1__WRITE_LINE).run();

        return Optional.of(contList[l_CCVS1__WRITE_LINE]);
      }
    },
    /* WRITE-LINE */
    new CobolControl(l_CCVS1__WRITE_LINE, CobolControl.LabelType.label) {
      public Optional<CobolControl> run() throws CobolRuntimeException, CobolGoBackException, CobolStopRunException {
        /* RL101A.CBL:354: ADD */
        {
          f_RECORD_COUNT.add (c_3_1, 4);
        }
        /* RL101A.CBL:355: IF */
        {
          if (((long)b_RECORD_COUNT.cmpNumdisp (5, 50) >  0L))
            {
              /* RL101A.CBL:356: MOVE */
              {
                b_DUMMY_HOLD.setBytes (b_DUMMY_RECORD, 120);
              }
              /* RL101A.CBL:357: MOVE */
              {
                b_DUMMY_RECORD.fillBytes (32, 120);
              }
              /* RL101A.CBL:358: WRITE */
              CobolRuntimeException.code = 0;
              {
                h_PRINT_FILE.write (f_DUMMY_RECORD, 1179648, null);
              }
              if (CobolRuntimeException.code != 0)
                {
                  /* PERFORM Default Error Handler */
                  CobolControl.perform(contList, l_Default_Error_Handler).run();
                }
              /* RL101A.CBL:359: MOVE */
              {
                f_DUMMY_RECORD.moveFrom (f_CCVS_C_1);
              }
              /* RL101A.CBL:359: PERFORM */
              /* PERFORM WRT-LN */
              CobolControl.perform(contList, l_CCVS1__WRT_LN).run();
              /* RL101A.CBL:360: MOVE */
              {
                b_DUMMY_RECORD.setBytes (b_CCVS_C_2, 120);
              }
              /* RL101A.CBL:360: PERFORM */
              for (int n8 = 2; n8 > 0; n8--)
                {
                  /* PERFORM WRT-LN */
                  CobolControl.perform(contList, l_CCVS1__WRT_LN).run();
                }
              /* RL101A.CBL:361: MOVE */
              {
                b_DUMMY_RECORD.setBytes (b_HYPHEN_LINE, 120);
              }
              /* RL101A.CBL:361: PERFORM */
              /* PERFORM WRT-LN */
              CobolControl.perform(contList, l_CCVS1__WRT_LN).run();
              /* RL101A.CBL:362: MOVE */
              {
                b_DUMMY_RECORD.setBytes (b_DUMMY_HOLD, 120);
              }
              /* RL101A.CBL:363: MOVE */
              {
                b_RECORD_COUNT.fillBytes (48, 5);
              }
            }
        }
        /* RL101A.CBL:364: PERFORM */
        /* PERFORM WRT-LN */
        CobolControl.perform(contList, l_CCVS1__WRT_LN).run();

        return Optional.of(contList[l_CCVS1__WRT_LN]);
      }
    },
    /* WRT-LN */
    new CobolControl(l_CCVS1__WRT_LN, CobolControl.LabelType.label) {
      public Optional<CobolControl> run() throws CobolRuntimeException, CobolGoBackException, CobolStopRunException {
        /* RL101A.CBL:366: WRITE */
        CobolRuntimeException.code = 0;
        {
          h_PRINT_FILE.write (f_DUMMY_RECORD, (1114112 + 1), null);
        }
        if (CobolRuntimeException.code != 0)
          {
            /* PERFORM Default Error Handler */
            CobolControl.perform(contList, l_Default_Error_Handler).run();
          }
        /* RL101A.CBL:367: MOVE */
        {
          b_DUMMY_RECORD.fillBytes (32, 120);
        }

        return Optional.of(contList[l_CCVS1__BLANK_LINE_PRINT]);
      }
    },
    /* BLANK-LINE-PRINT */
    new CobolControl(l_CCVS1__BLANK_LINE_PRINT, CobolControl.LabelType.label) {
      public Optional<CobolControl> run() throws CobolRuntimeException, CobolGoBackException, CobolStopRunException {
        /* RL101A.CBL:369: PERFORM */
        /* PERFORM WRT-LN */
        CobolControl.perform(contList, l_CCVS1__WRT_LN).run();

        return Optional.of(contList[l_CCVS1__FAIL_ROUTINE]);
      }
    },
    /* FAIL-ROUTINE */
    new CobolControl(l_CCVS1__FAIL_ROUTINE, CobolControl.LabelType.label) {
      public Optional<CobolControl> run() throws CobolRuntimeException, CobolGoBackException, CobolStopRunException {
        /* RL101A.CBL:371: IF */
        {
          if (((long)f_COMPUTED_X__TEST_COMPUTED.compareTo (CobolConstant.space) != 0L))
            {
              /* RL101A.CBL:372: GO TO */
              {
                if(true) return Optional.of(contList[l_CCVS1__FAIL_ROUTINE_WRITE                ]);

              }
            }
        }
        /* RL101A.CBL:373: IF */
        {
          if (((long)f_CORRECT_X__TEST_CORRECT.compareTo (CobolConstant.space) != 0L))
            {
              /* RL101A.CBL:373: GO TO */
              {
                if(true) return Optional.of(contList[l_CCVS1__FAIL_ROUTINE_WRITE                ]);

              }
            }
        }
        /* RL101A.CBL:374: MOVE */
        {
          b_INF_ANSI_REFERENCE__XXINFO.setBytes (b_ANSI_REFERENCE, 48);
        }
        /* RL101A.CBL:375: MOVE */
        {
          f_INFO_TEXT__XXINFO.moveFrom (c_8_NO);
        }
        /* RL101A.CBL:376: MOVE */
        {
          b_DUMMY_RECORD.setBytes (b_XXINFO, 120);
        }
        /* RL101A.CBL:376: PERFORM */
        for (int n9 = 2; n9 > 0; n9--)
          {
            /* PERFORM WRITE-LINE */
            CobolControl.perform(contList, l_CCVS1__WRITE_LINE).run();
          }
        /* RL101A.CBL:377: MOVE */
        {
          b_INF_ANSI_REFERENCE__XXINFO.fillBytes (32, 48);
        }
        /* RL101A.CBL:378: GO TO */
        {
          if(true) return Optional.of(contList[l_CCVS1__FAIL_ROUTINE_EX          ]);

        }

        return Optional.of(contList[l_CCVS1__FAIL_ROUTINE_WRITE]);
      }
    },
    /* FAIL-ROUTINE-WRITE */
    new CobolControl(l_CCVS1__FAIL_ROUTINE_WRITE, CobolControl.LabelType.label) {
      public Optional<CobolControl> run() throws CobolRuntimeException, CobolGoBackException, CobolStopRunException {
        /* RL101A.CBL:380: MOVE */
        {
          f_PRINT_REC.moveFrom (f_TEST_COMPUTED);
        }
        /* RL101A.CBL:380: PERFORM */
        /* PERFORM WRITE-LINE */
        CobolControl.perform(contList, l_CCVS1__WRITE_LINE).run();
        /* RL101A.CBL:381: MOVE */
        {
          b_COR_ANSI_REFERENCE__CORRECT_X__TEST_CORRECT.setBytes (b_ANSI_REFERENCE, 48);
        }
        /* RL101A.CBL:382: MOVE */
        {
          f_PRINT_REC.moveFrom (f_TEST_CORRECT);
        }
        /* RL101A.CBL:382: PERFORM */
        for (int n10 = 2; n10 > 0; n10--)
          {
            /* PERFORM WRITE-LINE */
            CobolControl.perform(contList, l_CCVS1__WRITE_LINE).run();
          }
        /* RL101A.CBL:383: MOVE */
        {
          b_COR_ANSI_REFERENCE__CORRECT_X__TEST_CORRECT.fillBytes (32, 48);
        }

        return Optional.of(contList[l_CCVS1__FAIL_ROUTINE_EX]);
      }
    },
    /* FAIL-ROUTINE-EX */
    new CobolControl(l_CCVS1__FAIL_ROUTINE_EX, CobolControl.LabelType.label) {
      public Optional<CobolControl> run() throws CobolRuntimeException, CobolGoBackException, CobolStopRunException {
        /* RL101A.CBL:384: EXIT */

        return Optional.of(contList[l_CCVS1__BAIL_OUT]);
      }
    },
    /* BAIL-OUT */
    new CobolControl(l_CCVS1__BAIL_OUT, CobolControl.LabelType.label) {
      public Optional<CobolControl> run() throws CobolRuntimeException, CobolGoBackException, CobolStopRunException {
        /* RL101A.CBL:386: IF */
        {
          if (((long)f_COMPUTED_A__COMPUTED_X__TEST_COMPUTED.compareTo (CobolConstant.space) != 0L))
            {
              /* RL101A.CBL:386: GO TO */
              {
                if(true) return Optional.of(contList[l_CCVS1__BAIL_OUT_WRITE                ]);

              }
            }
        }
        /* RL101A.CBL:387: IF */
        {
          if (((long)f_CORRECT_A__CORRECT_X__TEST_CORRECT.compareTo (CobolConstant.space) == 0L))
            {
              /* RL101A.CBL:387: GO TO */
              {
                if(true) return Optional.of(contList[l_CCVS1__BAIL_OUT_EX                ]);

              }
            }
        }

        return Optional.of(contList[l_CCVS1__BAIL_OUT_WRITE]);
      }
    },
    /* BAIL-OUT-WRITE */
    new CobolControl(l_CCVS1__BAIL_OUT_WRITE, CobolControl.LabelType.label) {
      public Optional<CobolControl> run() throws CobolRuntimeException, CobolGoBackException, CobolStopRunException {
        /* RL101A.CBL:389: MOVE */
        {
          b_XXCORRECT__INFO_TEXT__XXINFO.setBytes (b_CORRECT_A__CORRECT_X__TEST_CORRECT, 20);
        }
        /* RL101A.CBL:389: MOVE */
        {
          b_XXCOMPUTED__INFO_TEXT__XXINFO.setBytes (b_COMPUTED_A__COMPUTED_X__TEST_COMPUTED, 20);
        }
        /* RL101A.CBL:390: MOVE */
        {
          b_INF_ANSI_REFERENCE__XXINFO.setBytes (b_ANSI_REFERENCE, 48);
        }
        /* RL101A.CBL:391: MOVE */
        {
          b_DUMMY_RECORD.setBytes (b_XXINFO, 120);
        }
        /* RL101A.CBL:391: PERFORM */
        for (int n11 = 2; n11 > 0; n11--)
          {
            /* PERFORM WRITE-LINE */
            CobolControl.perform(contList, l_CCVS1__WRITE_LINE).run();
          }
        /* RL101A.CBL:392: MOVE */
        {
          b_INF_ANSI_REFERENCE__XXINFO.fillBytes (32, 48);
        }

        return Optional.of(contList[l_CCVS1__BAIL_OUT_EX]);
      }
    },
    /* BAIL-OUT-EX */
    new CobolControl(l_CCVS1__BAIL_OUT_EX, CobolControl.LabelType.label) {
      public Optional<CobolControl> run() throws CobolRuntimeException, CobolGoBackException, CobolStopRunException {
        /* RL101A.CBL:393: EXIT */

        return Optional.of(contList[l_CCVS1__CCVS1_EXIT]);
      }
    },
    /* CCVS1-EXIT */
    new CobolControl(l_CCVS1__CCVS1_EXIT, CobolControl.LabelType.label) {
      public Optional<CobolControl> run() throws CobolRuntimeException, CobolGoBackException, CobolStopRunException {
        /* RL101A.CBL:395: EXIT */

        return Optional.of(contList[l_SECT_RL101_001]);
      }
    },
    /* SECT-RL101-001 SECTION */
    new CobolControl(l_SECT_RL101_001, CobolControl.LabelType.section) {
      public Optional<CobolControl> run() throws CobolRuntimeException, CobolGoBackException, CobolStopRunException {

        return Optional.of(contList[l_SECT_RL101_001__REL_INIT_001]);
      }
    },
    /* REL-INIT-001 */
    new CobolControl(l_SECT_RL101_001__REL_INIT_001, CobolControl.LabelType.label) {
      public Optional<CobolControl> run() throws CobolRuntimeException, CobolGoBackException, CobolStopRunException {
        /* RL101A.CBL:398: MOVE */
        {
          b_FEATURE__TEST_RESULTS.setBytes (str_39_FILE, 20);
        }
        /* RL101A.CBL:399: OPEN */
        {
          CobolRuntimeException.code = 0;
          {
            h_RL_FS2.open (2, 1, f_RL_FS2_STATUS);
          }
          if (CobolRuntimeException.code != 0)
            {
              /* PERFORM Default Error Handler */
              CobolControl.perform(contList, l_Default_Error_Handler).run();
            }
        }
        /* RL101A.CBL:400: MOVE */
        {
          b_XFILE_NAME__FILE_RECORD_INFO_P1_120__FILE_RECORD_INFO__FILE_RECORD_INFORMATION_REC.getSubDataStorage(240 * 0).setBytes (str_40_RL, 6);
        }
        /* RL101A.CBL:401: MOVE */
        {
          b_XRECORD_NAME__FILE_RECORD_INFO_P1_120__FILE_RECORD_INFO__FILE_RECORD_INFORMATION_REC.getSubDataStorage(240 * 0).setBytes (str_41_R1, 6);
        }
        /* RL101A.CBL:402: MOVE */
        {
          b_XPROGRAM_NAME__FILE_RECORD_INFO_P1_120__FILE_RECORD_INFO__FILE_RECORD_INFORMATION_REC.getSubDataStorage(240 * 0).setBytes (b_CCVS_PGM_ID, 5);
        }
        /* RL101A.CBL:403: MOVE */
        {
          b_XRECORD_LENGTH__FILE_RECORD_INFO_P1_120__FILE_RECORD_INFO__FILE_RECORD_INFORMATION_REC.getSubDataStorage(240 * 0).setBytes (str_42_000120, 6);
        }
        /* RL101A.CBL:404: MOVE */
        {
          b_CHARS_OR_RECORDS__FILE_RECORD_INFO_P1_120__FILE_RECORD_INFO__FILE_RECORD_INFORMATION_REC.getSubDataStorage(240 * 0).setBytes (str_43_RC, 2);
        }
        /* RL101A.CBL:405: MOVE */
        {
          b_XBLOCK_SIZE__FILE_RECORD_INFO_P1_120__FILE_RECORD_INFO__FILE_RECORD_INFORMATION_REC.getSubDataStorage(240 * 0).setBytes (str_44_0001, 4);
        }
        /* RL101A.CBL:406: MOVE */
        {
          b_RECORDS_IN_FILE__FILE_RECORD_INFO_P1_120__FILE_RECORD_INFO__FILE_RECORD_INFORMATION_REC.getSubDataStorage(240 * 0).setBytes (str_45_000500, 6);
        }
        /* RL101A.CBL:407: MOVE */
        {
          b_XFILE_ORGANIZATION__FILE_RECORD_INFO_P1_120__FILE_RECORD_INFO__FILE_RECORD_INFORMATION_REC.getSubDataStorage(240 * 0).setBytes (str_46_RL, 2);
        }
        /* RL101A.CBL:408: MOVE */
        {
          b_XLABEL_TYPE__FILE_RECORD_INFO_P1_120__FILE_RECORD_INFO__FILE_RECORD_INFORMATION_REC.getSubDataStorage(240 * 0).setByte(83);
        }
        /* RL101A.CBL:409: MOVE */
        {
          b_XRECORD_NUMBER__FILE_RECORD_INFO_P1_120__FILE_RECORD_INFO__FILE_RECORD_INFORMATION_REC.getSubDataStorage(240 * 0).setBytes (str_47_000001, 6);
        }

        return Optional.of(contList[l_SECT_RL101_001__REL_TEST_001]);
      }
    },
    /* REL-TEST-001 */
    new CobolControl(l_SECT_RL101_001__REL_TEST_001, CobolControl.LabelType.label) {
      public Optional<CobolControl> run() throws CobolRuntimeException, CobolGoBackException, CobolStopRunException {
        /* RL101A.CBL:411: MOVE */
        {
          b_RL_FS2R1_F_G_120.setBytes (b_FILE_RECORD_INFO_P1_120__FILE_RECORD_INFO__FILE_RECORD_INFORMATION_REC.getSubDataStorage(240 * 0), 120);
        }
        /* RL101A.CBL:412: WRITE */
        CobolRuntimeException.code = 0;
        {
          h_RL_FS2.write (f_RL_FS2R1_F_G_120, 0, f_RL_FS2_STATUS);
        }
        if (CobolRuntimeException.code != 0)
          {
            if (CobolRuntimeException.code == 0x0506)
              {
                {
                  /* RL101A.CBL:413: GO TO */
                  {
                    if(true) return Optional.of(contList[l_SECT_RL101_001__REL_FAIL_001                    ]);

                  }
                }
              }
            else
              {
                /* PERFORM Default Error Handler */
                CobolControl.perform(contList, l_Default_Error_Handler).run();
              }
          }
        /* RL101A.CBL:414: IF */
        {
          if (((long)b_XRECORD_NUMBER__FILE_RECORD_INFO_P1_120__FILE_RECORD_INFO__FILE_RECORD_INFORMATION_REC.getSubDataStorage(240 * 0).cmpNumdisp (6, 500) == 0L))
            {
              /* RL101A.CBL:415: GO TO */
              {
                if(true) return Optional.of(contList[l_SECT_RL101_001__REL_WRITE_001                ]);

              }
            }
        }
        /* RL101A.CBL:416: ADD */
        {
          CobolFieldFactory.makeCobolField(6, b_XRECORD_NUMBER__FILE_RECORD_INFO_P1_120__FILE_RECORD_INFO__FILE_RECORD_INFORMATION_REC.getSubDataStorage(240 * 0), a_6).add (c_9_000001, 4);
        }
        /* RL101A.CBL:417: GO TO */
        {
          if(true) return Optional.of(contList[l_SECT_RL101_001__REL_TEST_001          ]);

        }

        return Optional.of(contList[l_SECT_RL101_001__REL_DELETE_001]);
      }
    },
    /* REL-DELETE-001 */
    new CobolControl(l_SECT_RL101_001__REL_DELETE_001, CobolControl.LabelType.label) {
      public Optional<CobolControl> run() throws CobolRuntimeException, CobolGoBackException, CobolStopRunException {
        /* RL101A.CBL:419: PERFORM */
        /* PERFORM DE-LETE */
        CobolControl.perform(contList, l_CCVS1__DE_LETE).run();
        /* RL101A.CBL:420: GO TO */
        {
          if(true) return Optional.of(contList[l_SECT_RL101_001__REL_WRITE_001          ]);

        }

        return Optional.of(contList[l_SECT_RL101_001__REL_FAIL_001]);
      }
    },
    /* REL-FAIL-001 */
    new CobolControl(l_SECT_RL101_001__REL_FAIL_001, CobolControl.LabelType.label) {
      public Optional<CobolControl> run() throws CobolRuntimeException, CobolGoBackException, CobolStopRunException {
        /* RL101A.CBL:422: PERFORM */
        /* PERFORM FAIL */
        CobolControl.perform(contList, l_CCVS1__FAIL).run();
        /* RL101A.CBL:423: MOVE */
        {
          f_RE_MARK__TEST_RESULTS.moveFrom (c_10_BOUNDARY);
        }

        return Optional.of(contList[l_SECT_RL101_001__REL_WRITE_001]);
      }
    },
    /* REL-WRITE-001 */
    new CobolControl(l_SECT_RL101_001__REL_WRITE_001, CobolControl.LabelType.label) {
      public Optional<CobolControl> run() throws CobolRuntimeException, CobolGoBackException, CobolStopRunException {
        /* RL101A.CBL:425: MOVE */
        {
          b_PAR_NAME__TEST_RESULTS.setBytes (str_48_REL, 22);
        }
        /* RL101A.CBL:426: MOVE */
        {
          b_COMPUTED_A__COMPUTED_X__TEST_COMPUTED.setBytes (str_49_FILE, 20);
        }
        /* RL101A.CBL:427: MOVE */
        {
          f_CORRECT_18V0__CR_18V0__CORRECT_X__TEST_CORRECT.moveFrom (CobolFieldFactory.makeCobolField(6, b_XRECORD_NUMBER__FILE_RECORD_INFO_P1_120__FILE_RECORD_INFO__FILE_RECORD_INFORMATION_REC.getSubDataStorage(240 * 0), a_6));
        }
        /* RL101A.CBL:428: PERFORM */
        /* PERFORM PRINT-DETAIL */
        CobolControl.perform(contList, l_CCVS1__PRINT_DETAIL).run();
        /* RL101A.CBL:429: CLOSE */
        {
          CobolRuntimeException.code = 0;
          {
            h_RL_FS2.close (0, f_RL_FS2_STATUS);
          }
          if (CobolRuntimeException.code != 0)
            {
              /* PERFORM Default Error Handler */
              CobolControl.perform(contList, l_Default_Error_Handler).run();
            }
        }

        return Optional.of(contList[l_SECT_RL101_001__REL_INIT_002]);
      }
    },
    /* REL-INIT-002 */
    new CobolControl(l_SECT_RL101_001__REL_INIT_002, CobolControl.LabelType.label) {
      public Optional<CobolControl> run() throws CobolRuntimeException, CobolGoBackException, CobolStopRunException {
        /* RL101A.CBL:431: OPEN */
        {
          CobolRuntimeException.code = 0;
          {
            h_RL_FS2.open (1, 0, f_RL_FS2_STATUS);
          }
          if (CobolRuntimeException.code != 0)
            {
              /* PERFORM Default Error Handler */
              CobolControl.perform(contList, l_Default_Error_Handler).run();
            }
        }
        /* RL101A.CBL:432: MOVE */
        {
          b_WRK_CS_09V00.fillBytes (0, 4);
        }

        return Optional.of(contList[l_SECT_RL101_001__REL_TEST_002]);
      }
    },
    /* REL-TEST-002 */
    new CobolControl(l_SECT_RL101_001__REL_TEST_002, CobolControl.LabelType.label) {
      public Optional<CobolControl> run() throws CobolRuntimeException, CobolGoBackException, CobolStopRunException {
        /* RL101A.CBL:434: READ */
        CobolRuntimeException.code = 0;
        {
          h_RL_FS2.read (0, f_RL_FS2_STATUS, 1);
        }
        if (CobolRuntimeException.code != 0)
          {
            if (CobolRuntimeException.code == 0x0501)
              {
                {
                  /* RL101A.CBL:435: GO TO */
                  {
                    if(true) return Optional.of(contList[l_SECT_RL101_001__REL_TEST_002_1                    ]);

                  }
                }
              }
            else
              {
                /* PERFORM Default Error Handler */
                CobolControl.perform(contList, l_Default_Error_Handler).run();
              }
          }
        /* RL101A.CBL:436: MOVE */
        {
          b_FILE_RECORD_INFO_P1_120__FILE_RECORD_INFO__FILE_RECORD_INFORMATION_REC.getSubDataStorage(240 * 0).setBytes (b_RL_FS2R1_F_G_120, 120);
        }
        /* RL101A.CBL:437: ADD */
        {
          f_WRK_CS_09V00.add (c_3_1, 4);
        }
        /* RL101A.CBL:438: IF */
        {
          if (((long)b_WRK_CS_09V00.cmpSwpS32Binary (500) >  0L))
            {
              /* RL101A.CBL:439: MOVE */
              {
                f_RE_MARK__TEST_RESULTS.moveFrom (c_11_MORE);
              }
              /* RL101A.CBL:440: GO TO */
              {
                if(true) return Optional.of(contList[l_SECT_RL101_001__REL_TEST_002_1                ]);

              }
            }
        }
        /* RL101A.CBL:441: GO TO */
        {
          if(true) return Optional.of(contList[l_SECT_RL101_001__REL_TEST_002          ]);

        }

        return Optional.of(contList[l_SECT_RL101_001__REL_DELETE_002]);
      }
    },
    /* REL-DELETE-002 */
    new CobolControl(l_SECT_RL101_001__REL_DELETE_002, CobolControl.LabelType.label) {
      public Optional<CobolControl> run() throws CobolRuntimeException, CobolGoBackException, CobolStopRunException {

        return Optional.of(contList[l_SECT_RL101_001__REL_TEST_002_1]);
      }
    },
    /* REL-TEST-002-1 */
    new CobolControl(l_SECT_RL101_001__REL_TEST_002_1, CobolControl.LabelType.label) {
      public Optional<CobolControl> run() throws CobolRuntimeException, CobolGoBackException, CobolStopRunException {
        /* RL101A.CBL:444: IF */
        {
          if (((long)b_XRECORD_NUMBER__FILE_RECORD_INFO_P1_120__FILE_RECORD_INFO__FILE_RECORD_INFORMATION_REC.getSubDataStorage(240 * 0).cmpNumdisp (6, 500) != 0L))
            {
              /* RL101A.CBL:445: PERFORM */
              /* PERFORM FAIL */
              CobolControl.perform(contList, l_CCVS1__FAIL).run();
            }
          else
            {
              /* RL101A.CBL:447: PERFORM */
              /* PERFORM PASS */
              CobolControl.perform(contList, l_CCVS1__PASS).run();
            }
        }
        /* RL101A.CBL:448: GO TO */
        {
          if(true) return Optional.of(contList[l_SECT_RL101_001__REL_WRITE_002          ]);

        }

        return Optional.of(contList[l_SECT_RL101_001__REL_WRITE_002]);
      }
    },
    /* REL-WRITE-002 */
    new CobolControl(l_SECT_RL101_001__REL_WRITE_002, CobolControl.LabelType.label) {
      public Optional<CobolControl> run() throws CobolRuntimeException, CobolGoBackException, CobolStopRunException {
        /* RL101A.CBL:450: MOVE */
        {
          b_PAR_NAME__TEST_RESULTS.setBytes (str_50_REL, 22);
        }
        /* RL101A.CBL:451: MOVE */
        {
          b_COMPUTED_A__COMPUTED_X__TEST_COMPUTED.setBytes (str_51_FILE, 20);
        }
        /* RL101A.CBL:452: MOVE */
        {
          f_CORRECT_18V0__CR_18V0__CORRECT_X__TEST_CORRECT.moveFrom (CobolFieldFactory.makeCobolField(6, b_XRECORD_NUMBER__FILE_RECORD_INFO_P1_120__FILE_RECORD_INFO__FILE_RECORD_INFORMATION_REC.getSubDataStorage(240 * 0), a_6));
        }
        /* RL101A.CBL:453: PERFORM */
        /* PERFORM PRINT-DETAIL */
        CobolControl.perform(contList, l_CCVS1__PRINT_DETAIL).run();
        /* RL101A.CBL:454: CLOSE */
        {
          CobolRuntimeException.code = 0;
          {
            h_RL_FS2.close (0, f_RL_FS2_STATUS);
          }
          if (CobolRuntimeException.code != 0)
            {
              /* PERFORM Default Error Handler */
              CobolControl.perform(contList, l_Default_Error_Handler).run();
            }
        }

        return Optional.of(contList[l_CCVS_EXIT]);
      }
    },
    /* CCVS-EXIT SECTION */
    new CobolControl(l_CCVS_EXIT, CobolControl.LabelType.section) {
      public Optional<CobolControl> run() throws CobolRuntimeException, CobolGoBackException, CobolStopRunException {

        return Optional.of(contList[l_CCVS_EXIT__CCVS_999999]);
      }
    },
    /* CCVS-999999 */
    new CobolControl(l_CCVS_EXIT__CCVS_999999, CobolControl.LabelType.label) {
      public Optional<CobolControl> run() throws CobolRuntimeException, CobolGoBackException, CobolStopRunException {
        /* RL101A.CBL:457: GO TO */
        {
          if(true) return Optional.of(contList[l_CCVS1__CLOSE_FILES          ]);

        }


        return Optional.of(CobolControl.pure());
      }
    },
    /* Default Error Handler */
    new CobolControl(l_Default_Error_Handler, CobolControl.LabelType.label) {
      public Optional<CobolControl> run() throws CobolRuntimeException, CobolGoBackException, CobolStopRunException {

        if ((CobolFile.errorFile.flag_select_features & CobolFile.COB_SELECT_FILE_STATUS) == 0) {
        	CobolFile.defaultErrorHandle ();
        	CobolStopRunException.stopRunAndThrow (1);
        }

        return Optional.of(CobolControl.pure());
      }
    },
    CobolControl.pure()
  };
  public void execEntry(int start) throws CobolRuntimeException, CobolGoBackException, CobolStopRunException {
    Optional<CobolControl> nextLabel = Optional.of(contList[start]);
    while(nextLabel.isPresent()) {
      CobolControl section = nextLabel.get();
      nextLabel = section.run();
    }
  }

  public static void main(String[] args)
  {
    CobolUtil.cob_init(args, false);
    CobolDecimal.cobInitNumeric();
    new RL101A().RL101A_(0);
    CobolStopRunException.stopRun();
  }

  public RL101A()
  {
    init();
  }

  public void init()
  {
    try {
      /* Data storage */

      cob_unifunc = null;

      /* PROGRAM-ID : RL101A */
      b_RETURN_CODE = new CobolDataStorage(4);	/* RETURN-CODE */
      b_PRINT_FILE_record = new CobolDataStorage(120);	/* PRINT-FILE_record */
      b_RL_FS2_record = new CobolDataStorage(120);	/* RL-FS2_record */
      b_RL_FS2_STATUS = new CobolDataStorage(2);	/* RL-FS2-STATUS */
      b_WRK_CS_09V00 = new CobolDataStorage(4);	/* WRK-CS-09V00 */
      b_FILE_RECORD_INFORMATION_REC = new CobolDataStorage(2640);	/* FILE-RECORD-INFORMATION-REC */
      b_TEST_RESULTS = new CobolDataStorage(119);	/* TEST-RESULTS */
      b_TEST_COMPUTED = new CobolDataStorage(117);	/* TEST-COMPUTED */
      b_TEST_CORRECT = new CobolDataStorage(117);	/* TEST-CORRECT */
      b_CCVS_C_1 = new CobolDataStorage(119);	/* CCVS-C-1 */
      b_CCVS_C_2 = new CobolDataStorage(120);	/* CCVS-C-2 */
      b_REC_SKL_SUB = new CobolDataStorage(2);	/* REC-SKL-SUB */
      b_REC_CT = new CobolDataStorage(2);	/* REC-CT */
      b_DELETE_COUNTER = new CobolDataStorage(3);	/* DELETE-COUNTER */
      b_ERROR_COUNTER = new CobolDataStorage(3);	/* ERROR-COUNTER */
      b_INSPECT_COUNTER = new CobolDataStorage(3);	/* INSPECT-COUNTER */
      b_PASS_COUNTER = new CobolDataStorage(3);	/* PASS-COUNTER */
      b_TOTAL_ERROR = new CobolDataStorage(3);	/* TOTAL-ERROR */
      b_ERROR_HOLD = new CobolDataStorage(3);	/* ERROR-HOLD */
      b_DUMMY_HOLD = new CobolDataStorage(120);	/* DUMMY-HOLD */
      b_RECORD_COUNT = new CobolDataStorage(5);	/* RECORD-COUNT */
      b_ANSI_REFERENCE = new CobolDataStorage(48);	/* ANSI-REFERENCE */
      b_CCVS_H_1 = new CobolDataStorage(120);	/* CCVS-H-1 */
      b_CCVS_H_2A = new CobolDataStorage(120);	/* CCVS-H-2A */
      b_CCVS_H_2B = new CobolDataStorage(120);	/* CCVS-H-2B */
      b_CCVS_H_3 = new CobolDataStorage(120);	/* CCVS-H-3 */
      b_CCVS_E_1 = new CobolDataStorage(120);	/* CCVS-E-1 */
      b_CCVS_E_2 = new CobolDataStorage(100);	/* CCVS-E-2 */
      b_CCVS_E_3 = new CobolDataStorage(120);	/* CCVS-E-3 */
      b_CCVS_E_4 = new CobolDataStorage(50);	/* CCVS-E-4 */
      b_XXINFO = new CobolDataStorage(120);	/* XXINFO */
      b_HYPHEN_LINE = new CobolDataStorage(120);	/* HYPHEN-LINE */
      b_CCVS_PGM_ID = new CobolDataStorage(9);	/* CCVS-PGM-ID */
      b_WORK$39__CCVS_C_1 = b_CCVS_C_1;
      b_WORK$40__CCVS_C_1 = b_CCVS_C_1.getSubDataStorage(99);
      b_WORK$41__CCVS_C_2 = b_CCVS_C_2;
      b_WORK$42__CCVS_C_2 = b_CCVS_C_2.getSubDataStorage(1);
      b_WORK$43__CCVS_C_2 = b_CCVS_C_2.getSubDataStorage(7);
      b_WORK$44__CCVS_C_2 = b_CCVS_C_2.getSubDataStorage(22);
      b_WORK$45__CCVS_C_2 = b_CCVS_C_2.getSubDataStorage(26);
      b_ID_AGAIN__CCVS_E_1 = b_CCVS_E_1.getSubDataStorage(66);
      b_WORK$62__CCVS_E_1 = b_CCVS_E_1;
      b_WORK$63__CCVS_E_1 = b_CCVS_E_1.getSubDataStorage(52);
      b_WORK$64__CCVS_E_1 = b_CCVS_E_1.getSubDataStorage(75);
      b_CCVS_E_2_2__CCVS_E_2 = b_CCVS_E_2.getSubDataStorage(52);
      b_ENDER_DESC__CCVS_E_2_2__CCVS_E_2 = b_CCVS_E_2.getSubDataStorage(56);
      b_ERROR_TOTAL__CCVS_E_2_2__CCVS_E_2 = b_CCVS_E_2.getSubDataStorage(52);
      b_WORK$65__CCVS_E_2 = b_CCVS_E_2;
      b_WORK$66__CCVS_E_2 = b_CCVS_E_2.getSubDataStorage(31);
      b_WORK$67__CCVS_E_2_2__CCVS_E_2 = b_CCVS_E_2.getSubDataStorage(55);
      b_WORK$68__CCVS_E_3 = b_CCVS_E_3;
      b_WORK$69__CCVS_E_3 = b_CCVS_E_3.getSubDataStorage(22);
      b_WORK$70__CCVS_E_3 = b_CCVS_E_3.getSubDataStorage(34);
      b_WORK$71__CCVS_E_3 = b_CCVS_E_3.getSubDataStorage(92);
      b_WORK$72__CCVS_E_3 = b_CCVS_E_3.getSubDataStorage(105);
      b_CCVS_E_4_1__CCVS_E_4 = b_CCVS_E_4;
      b_CCVS_E_4_2__CCVS_E_4 = b_CCVS_E_4.getSubDataStorage(7);
      b_WORK$73__CCVS_E_4 = b_CCVS_E_4.getSubDataStorage(3);
      b_WORK$74__CCVS_E_4 = b_CCVS_E_4.getSubDataStorage(10);
      b_WORK$46__CCVS_H_1 = b_CCVS_H_1;
      b_WORK$47__CCVS_H_1 = b_CCVS_H_1.getSubDataStorage(39);
      b_WORK$48__CCVS_H_1 = b_CCVS_H_1.getSubDataStorage(81);
      b_WORK$49__CCVS_H_2A = b_CCVS_H_2A;
      b_WORK$50__CCVS_H_2A = b_CCVS_H_2A.getSubDataStorage(40);
      b_WORK$51__CCVS_H_2A = b_CCVS_H_2A.getSubDataStorage(47);
      b_WORK$52__CCVS_H_2A = b_CCVS_H_2A.getSubDataStorage(51);
      b_WORK$53__CCVS_H_2A = b_CCVS_H_2A.getSubDataStorage(79);
      b_TEST_ID__CCVS_H_2B = b_CCVS_H_2B.getSubDataStorage(15);
      b_WORK$54__CCVS_H_2B = b_CCVS_H_2B;
      b_WORK$55__CCVS_H_2B = b_CCVS_H_2B.getSubDataStorage(24);
      b_WORK$56__CCVS_H_2B = b_CCVS_H_2B.getSubDataStorage(28);
      b_WORK$57__CCVS_H_2B = b_CCVS_H_2B.getSubDataStorage(40);
      b_WORK$58__CCVS_H_2B = b_CCVS_H_2B.getSubDataStorage(62);
      b_WORK$59__CCVS_H_3 = b_CCVS_H_3;
      b_WORK$60__CCVS_H_3 = b_CCVS_H_3.getSubDataStorage(34);
      b_WORK$61__CCVS_H_3 = b_CCVS_H_3.getSubDataStorage(92);
      b_CHARS_OR_RECORDS__FILE_RECORD_INFO_P1_120__FILE_RECORD_INFO__FILE_RECORD_INFORMATION_REC = b_FILE_RECORD_INFORMATION_REC.getSubDataStorage(327);
      b_FILE_RECORD_INFO__FILE_RECORD_INFORMATION_REC = b_FILE_RECORD_INFORMATION_REC.getSubDataStorage(240);
      b_FILE_RECORD_INFO_P1_120__FILE_RECORD_INFO__FILE_RECORD_INFORMATION_REC = b_FILE_RECORD_INFORMATION_REC.getSubDataStorage(240);
      b_FILE_RECORD_INFO_P121_240__FILE_RECORD_INFO__FILE_RECORD_INFORMATION_REC = b_FILE_RECORD_INFORMATION_REC.getSubDataStorage(360);
      b_FILE_RECORD_INFO_SKELETON__FILE_RECORD_INFORMATION_REC = b_FILE_RECORD_INFORMATION_REC;
      b_ODO_NUMBER__FILE_RECORD_INFO_P1_120__FILE_RECORD_INFO__FILE_RECORD_INFORMATION_REC = b_FILE_RECORD_INFORMATION_REC.getSubDataStorage(293);
      b_RECORDS_IN_FILE__FILE_RECORD_INFO_P1_120__FILE_RECORD_INFO__FILE_RECORD_INFORMATION_REC = b_FILE_RECORD_INFORMATION_REC.getSubDataStorage(340);
      b_REELUNIT_NUMBER__FILE_RECORD_INFO_P1_120__FILE_RECORD_INFO__FILE_RECORD_INFORMATION_REC = b_FILE_RECORD_INFORMATION_REC.getSubDataStorage(266);
      b_UPDATE_NUMBER__FILE_RECORD_INFO_P1_120__FILE_RECORD_INFO__FILE_RECORD_INFORMATION_REC = b_FILE_RECORD_INFORMATION_REC.getSubDataStorage(286);
      b_WORK$12__FILE_RECORD_INFO_P1_120__FILE_RECORD_INFO__FILE_RECORD_INFORMATION_REC = b_FILE_RECORD_INFORMATION_REC.getSubDataStorage(267);
      b_WORK$13__FILE_RECORD_INFO_P1_120__FILE_RECORD_INFO__FILE_RECORD_INFORMATION_REC = b_FILE_RECORD_INFORMATION_REC.getSubDataStorage(280);
      b_WORK$14__FILE_RECORD_INFO_P1_120__FILE_RECORD_INFO__FILE_RECORD_INFORMATION_REC = b_FILE_RECORD_INFORMATION_REC.getSubDataStorage(288);
      b_WORK$15__FILE_RECORD_INFO_P1_120__FILE_RECORD_INFO__FILE_RECORD_INFORMATION_REC = b_FILE_RECORD_INFORMATION_REC.getSubDataStorage(297);
      b_WORK$17__FILE_RECORD_INFO_P1_120__FILE_RECORD_INFO__FILE_RECORD_INFORMATION_REC = b_FILE_RECORD_INFORMATION_REC.getSubDataStorage(320);
      b_WORK$19__FILE_RECORD_INFO_P1_120__FILE_RECORD_INFO__FILE_RECORD_INFORMATION_REC = b_FILE_RECORD_INFORMATION_REC.getSubDataStorage(334);
      b_WORK$2__FILE_RECORD_INFO_SKELETON__FILE_RECORD_INFORMATION_REC = b_FILE_RECORD_INFORMATION_REC;
      b_WORK$20__FILE_RECORD_INFO_P1_120__FILE_RECORD_INFO__FILE_RECORD_INFORMATION_REC = b_FILE_RECORD_INFORMATION_REC.getSubDataStorage(346);
      b_WORK$3__FILE_RECORD_INFO_SKELETON__FILE_RECORD_INFORMATION_REC = b_FILE_RECORD_INFORMATION_REC.getSubDataStorage(48);
      b_WORK$4__FILE_RECORD_INFO_SKELETON__FILE_RECORD_INFORMATION_REC = b_FILE_RECORD_INFORMATION_REC.getSubDataStorage(94);
      b_WORK$5__FILE_RECORD_INFO_SKELETON__FILE_RECORD_INFORMATION_REC = b_FILE_RECORD_INFORMATION_REC.getSubDataStorage(120);
      b_WORK$6__FILE_RECORD_INFO_SKELETON__FILE_RECORD_INFORMATION_REC = b_FILE_RECORD_INFORMATION_REC.getSubDataStorage(157);
      b_WORK$7__FILE_RECORD_INFO_SKELETON__FILE_RECORD_INFORMATION_REC = b_FILE_RECORD_INFORMATION_REC.getSubDataStorage(195);
      b_WORK$8__FILE_RECORD_INFO_SKELETON__FILE_RECORD_INFORMATION_REC = b_FILE_RECORD_INFORMATION_REC.getSubDataStorage(233);
      b_WORK$9__FILE_RECORD_INFO_P1_120__FILE_RECORD_INFO__FILE_RECORD_INFORMATION_REC = b_FILE_RECORD_INFORMATION_REC.getSubDataStorage(240);
      b_XBLOCK_SIZE__FILE_RECORD_INFO_P1_120__FILE_RECORD_INFO__FILE_RECORD_INFORMATION_REC = b_FILE_RECORD_INFORMATION_REC.getSubDataStorage(330);
      b_XFILE_NAME__FILE_RECORD_INFO_P1_120__FILE_RECORD_INFO__FILE_RECORD_INFORMATION_REC = b_FILE_RECORD_INFORMATION_REC.getSubDataStorage(245);
      b_XFILE_ORGANIZATION__FILE_RECORD_INFO_P1_120__FILE_RECORD_INFO__FILE_RECORD_INFORMATION_REC = b_FILE_RECORD_INFORMATION_REC.getSubDataStorage(351);
      b_XLABEL_TYPE__FILE_RECORD_INFO_P1_120__FILE_RECORD_INFO__FILE_RECORD_INFORMATION_REC = b_FILE_RECORD_INFORMATION_REC.getSubDataStorage(359);
      b_XPROGRAM_NAME__FILE_RECORD_INFO_P1_120__FILE_RECORD_INFO__FILE_RECORD_INFORMATION_REC = b_FILE_RECORD_INFORMATION_REC.getSubDataStorage(302);
      b_XRECORD_LENGTH__FILE_RECORD_INFO_P1_120__FILE_RECORD_INFO__FILE_RECORD_INFORMATION_REC = b_FILE_RECORD_INFORMATION_REC.getSubDataStorage(314);
      b_XRECORD_NAME__FILE_RECORD_INFO_P1_120__FILE_RECORD_INFO__FILE_RECORD_INFORMATION_REC = b_FILE_RECORD_INFORMATION_REC.getSubDataStorage(259);
      b_XRECORD_NUMBER__FILE_RECORD_INFO_P1_120__FILE_RECORD_INFO__FILE_RECORD_INFORMATION_REC = b_FILE_RECORD_INFORMATION_REC.getSubDataStorage(274);
      b_WORK$78__HYPHEN_LINE = b_HYPHEN_LINE;
      b_WORK$79__HYPHEN_LINE = b_HYPHEN_LINE.getSubDataStorage(1);
      b_WORK$80__HYPHEN_LINE = b_HYPHEN_LINE.getSubDataStorage(66);
      b_DUMMY_RECORD = b_PRINT_FILE_record;
      b_PRINT_REC = b_PRINT_FILE_record;
      b_RL_FS2R1_F_G_120 = b_RL_FS2_record;
      b_COMPUTED_A__COMPUTED_X__TEST_COMPUTED = b_TEST_COMPUTED.getSubDataStorage(47);
      b_COMPUTED_X__TEST_COMPUTED = b_TEST_COMPUTED.getSubDataStorage(47);
      b_WORK$31__TEST_COMPUTED = b_TEST_COMPUTED;
      b_WORK$32__TEST_COMPUTED = b_TEST_COMPUTED.getSubDataStorage(30);
      b_WORK$34__COMPUTED_X__TEST_COMPUTED = b_TEST_COMPUTED.getSubDataStorage(67);
      b_COR_ANSI_REFERENCE__CORRECT_X__TEST_CORRECT = b_TEST_CORRECT.getSubDataStorage(69);
      b_CORRECT_18V0__CR_18V0__CORRECT_X__TEST_CORRECT = b_TEST_CORRECT.getSubDataStorage(47);
      b_CORRECT_A__CORRECT_X__TEST_CORRECT = b_TEST_CORRECT.getSubDataStorage(47);
      b_CORRECT_X__TEST_CORRECT = b_TEST_CORRECT.getSubDataStorage(47);
      b_WORK$35__TEST_CORRECT = b_TEST_CORRECT;
      b_WORK$36__TEST_CORRECT = b_TEST_CORRECT.getSubDataStorage(30);
      b_WORK$38__CORRECT_X__TEST_CORRECT = b_TEST_CORRECT.getSubDataStorage(67);
      b_DOTVALUE__PAR_NAME__TEST_RESULTS = b_TEST_RESULTS.getSubDataStorage(48);
      b_FEATURE__TEST_RESULTS = b_TEST_RESULTS.getSubDataStorage(1);
      b_P_OR_F__TEST_RESULTS = b_TEST_RESULTS.getSubDataStorage(22);
      b_PAR_NAME__TEST_RESULTS = b_TEST_RESULTS.getSubDataStorage(28);
      b_PARDOT_X__PAR_NAME__TEST_RESULTS = b_TEST_RESULTS.getSubDataStorage(47);
      b_RE_MARK__TEST_RESULTS = b_TEST_RESULTS.getSubDataStorage(58);
      b_WORK$26__TEST_RESULTS = b_TEST_RESULTS;
      b_WORK$27__TEST_RESULTS = b_TEST_RESULTS.getSubDataStorage(21);
      b_WORK$28__TEST_RESULTS = b_TEST_RESULTS.getSubDataStorage(27);
      b_WORK$29__PAR_NAME__TEST_RESULTS = b_TEST_RESULTS.getSubDataStorage(28);
      b_WORK$30__TEST_RESULTS = b_TEST_RESULTS.getSubDataStorage(50);
      b_INF_ANSI_REFERENCE__XXINFO = b_XXINFO.getSubDataStorage(72);
      b_INFO_TEXT__XXINFO = b_XXINFO.getSubDataStorage(19);
      b_WORK$75__XXINFO = b_XXINFO;
      b_WORK$76__INFO_TEXT__XXINFO = b_XXINFO.getSubDataStorage(19);
      b_WORK$77__INFO_TEXT__XXINFO = b_XXINFO.getSubDataStorage(47);
      b_XXCOMPUTED__INFO_TEXT__XXINFO = b_XXINFO.getSubDataStorage(27);
      b_XXCORRECT__INFO_TEXT__XXINFO = b_XXINFO.getSubDataStorage(52);

      /* End of data storage */


      initAttr();

      /* Fields */

      /* PROGRAM-ID : RL101A */
      f_PRINT_REC	= CobolFieldFactory.makeCobolField(120, b_PRINT_REC, a_1);	/* PRINT-REC */
      f_DUMMY_RECORD	= CobolFieldFactory.makeCobolField(120, b_DUMMY_RECORD, a_1);	/* DUMMY-RECORD */
      f_PRINT_FILE_record	= CobolFieldFactory.makeCobolField(120, b_PRINT_FILE_record, a_1);	/* PRINT-FILE_record */
      f_RL_FS2R1_F_G_120	= CobolFieldFactory.makeCobolField(120, b_RL_FS2R1_F_G_120, a_4);	/* RL-FS2R1-F-G-120 */
      f_RL_FS2_record	= CobolFieldFactory.makeCobolField(120, b_RL_FS2_record, a_1);	/* RL-FS2_record */
      f_RL_FS2_STATUS	= CobolFieldFactory.makeCobolField(2, b_RL_FS2_STATUS, a_1);	/* RL-FS2-STATUS */
      f_WRK_CS_09V00	= CobolFieldFactory.makeCobolField(4, b_WRK_CS_09V00, a_8);	/* WRK-CS-09V00 */
      f_TEST_RESULTS	= CobolFieldFactory.makeCobolField(119, b_TEST_RESULTS, a_4);	/* TEST-RESULTS */
      f_RE_MARK__TEST_RESULTS	= CobolFieldFactory.makeCobolField(61, b_RE_MARK__TEST_RESULTS, a_1);	/* RE-MARK */
      f_TEST_COMPUTED	= CobolFieldFactory.makeCobolField(117, b_TEST_COMPUTED, a_4);	/* TEST-COMPUTED */
      f_COMPUTED_X__TEST_COMPUTED	= CobolFieldFactory.makeCobolField(70, b_COMPUTED_X__TEST_COMPUTED, a_4);	/* COMPUTED-X */
      f_COMPUTED_A__COMPUTED_X__TEST_COMPUTED	= CobolFieldFactory.makeCobolField(20, b_COMPUTED_A__COMPUTED_X__TEST_COMPUTED, a_1);	/* COMPUTED-A */
      f_TEST_CORRECT	= CobolFieldFactory.makeCobolField(117, b_TEST_CORRECT, a_4);	/* TEST-CORRECT */
      f_CORRECT_X__TEST_CORRECT	= CobolFieldFactory.makeCobolField(70, b_CORRECT_X__TEST_CORRECT, a_4);	/* CORRECT-X */
      f_CORRECT_A__CORRECT_X__TEST_CORRECT	= CobolFieldFactory.makeCobolField(20, b_CORRECT_A__CORRECT_X__TEST_CORRECT, a_1);	/* CORRECT-A */
      f_CORRECT_18V0__CR_18V0__CORRECT_X__TEST_CORRECT	= CobolFieldFactory.makeCobolField(19, b_CORRECT_18V0__CR_18V0__CORRECT_X__TEST_CORRECT, a_7);	/* CORRECT-18V0 */
      f_CCVS_C_1	= CobolFieldFactory.makeCobolField(119, b_CCVS_C_1, a_4);	/* CCVS-C-1 */
      f_REC_SKL_SUB	= CobolFieldFactory.makeCobolField(2, b_REC_SKL_SUB, a_2);	/* REC-SKL-SUB */
      f_DELETE_COUNTER	= CobolFieldFactory.makeCobolField(3, b_DELETE_COUNTER, a_3);	/* DELETE-COUNTER */
      f_ERROR_COUNTER	= CobolFieldFactory.makeCobolField(3, b_ERROR_COUNTER, a_3);	/* ERROR-COUNTER */
      f_INSPECT_COUNTER	= CobolFieldFactory.makeCobolField(3, b_INSPECT_COUNTER, a_3);	/* INSPECT-COUNTER */
      f_PASS_COUNTER	= CobolFieldFactory.makeCobolField(3, b_PASS_COUNTER, a_3);	/* PASS-COUNTER */
      f_ERROR_HOLD	= CobolFieldFactory.makeCobolField(3, b_ERROR_HOLD, a_3);	/* ERROR-HOLD */
      f_RECORD_COUNT	= CobolFieldFactory.makeCobolField(5, b_RECORD_COUNT, a_5);	/* RECORD-COUNT */
      f_CCVS_E_2	= CobolFieldFactory.makeCobolField(100, b_CCVS_E_2, a_4);	/* CCVS-E-2 */
      f_ENDER_DESC__CCVS_E_2_2__CCVS_E_2	= CobolFieldFactory.makeCobolField(44, b_ENDER_DESC__CCVS_E_2_2__CCVS_E_2, a_1);	/* ENDER-DESC */
      f_INFO_TEXT__XXINFO	= CobolFieldFactory.makeCobolField(53, b_INFO_TEXT__XXINFO, a_4);	/* INFO-TEXT */

      /* End of fields */


      /* Constants */

      c_1_report	= CobolFieldFactory.makeCobolField(10, str_52_report, a_1);
      c_2_XXXXX021	= CobolFieldFactory.makeCobolField(8, str_53_XXXXX021, a_1);
      c_3_1	= CobolFieldFactory.makeCobolField(1, "1", a_9);
      c_4	= CobolFieldFactory.makeCobolField(20, str_54, a_1);
      c_5_TEST	= CobolFieldFactory.makeCobolField(14, str_55_TEST, a_1);
      c_6_TEST	= CobolFieldFactory.makeCobolField(20, str_56_TEST, a_1);
      c_7_TEST	= CobolFieldFactory.makeCobolField(26, str_57_TEST, a_1);
      c_8_NO	= CobolFieldFactory.makeCobolField(36, str_58_NO, a_1);
      c_9_000001	= CobolFieldFactory.makeCobolField(6, "000001", a_6);
      c_10_BOUNDARY	= CobolFieldFactory.makeCobolField(18, str_59_BOUNDARY, a_1);
      c_11_MORE	= CobolFieldFactory.makeCobolField(21, str_60_MORE, a_1);

    } catch(Exception e) {
      e.printStackTrace();
    }
  }

  private void initAttr() {
    /* Attributes */

    a_1 = new CobolFieldAttribute (33, 0, 0, 0, null);
    a_2 = new CobolFieldAttribute (16, 2, 0, 0, null);
    a_3 = new CobolFieldAttribute (16, 3, 0, 0, null);
    a_4 = new CobolFieldAttribute (1, 0, 0, 0, null);
    a_5 = new CobolFieldAttribute (16, 5, 0, 0, null);
    a_6 = new CobolFieldAttribute (16, 6, 0, 0, null);
    a_7 = new CobolFieldAttribute (36, 18, 0, 1, "-\001\000\000\0009\022\000\000\000");
    a_8 = new CobolFieldAttribute (17, 9, 0, 33, null);
    a_9 = new CobolFieldAttribute (16, 1, 0, 0, null);

  }

  /* Data storage */

  /* PROGRAM-ID : RL101A */
  private CobolDataStorage b_RETURN_CODE;	/* RETURN-CODE */
  private CobolDataStorage b_PRINT_FILE_record;	/* PRINT-FILE_record */
  private CobolDataStorage b_RL_FS2_record;	/* RL-FS2_record */
  private CobolDataStorage b_RL_FS2_STATUS;	/* RL-FS2-STATUS */
  private CobolDataStorage b_WRK_CS_09V00;	/* WRK-CS-09V00 */
  private CobolDataStorage b_FILE_RECORD_INFORMATION_REC;	/* FILE-RECORD-INFORMATION-REC */
  private CobolDataStorage b_TEST_RESULTS;	/* TEST-RESULTS */
  private CobolDataStorage b_TEST_COMPUTED;	/* TEST-COMPUTED */
  private CobolDataStorage b_TEST_CORRECT;	/* TEST-CORRECT */
  private CobolDataStorage b_CCVS_C_1;	/* CCVS-C-1 */
  private CobolDataStorage b_CCVS_C_2;	/* CCVS-C-2 */
  private CobolDataStorage b_REC_SKL_SUB;	/* REC-SKL-SUB */
  private CobolDataStorage b_REC_CT;	/* REC-CT */
  private CobolDataStorage b_DELETE_COUNTER;	/* DELETE-COUNTER */
  private CobolDataStorage b_ERROR_COUNTER;	/* ERROR-COUNTER */
  private CobolDataStorage b_INSPECT_COUNTER;	/* INSPECT-COUNTER */
  private CobolDataStorage b_PASS_COUNTER;	/* PASS-COUNTER */
  private CobolDataStorage b_TOTAL_ERROR;	/* TOTAL-ERROR */
  private CobolDataStorage b_ERROR_HOLD;	/* ERROR-HOLD */
  private CobolDataStorage b_DUMMY_HOLD;	/* DUMMY-HOLD */
  private CobolDataStorage b_RECORD_COUNT;	/* RECORD-COUNT */
  private CobolDataStorage b_ANSI_REFERENCE;	/* ANSI-REFERENCE */
  private CobolDataStorage b_CCVS_H_1;	/* CCVS-H-1 */
  private CobolDataStorage b_CCVS_H_2A;	/* CCVS-H-2A */
  private CobolDataStorage b_CCVS_H_2B;	/* CCVS-H-2B */
  private CobolDataStorage b_CCVS_H_3;	/* CCVS-H-3 */
  private CobolDataStorage b_CCVS_E_1;	/* CCVS-E-1 */
  private CobolDataStorage b_CCVS_E_2;	/* CCVS-E-2 */
  private CobolDataStorage b_CCVS_E_3;	/* CCVS-E-3 */
  private CobolDataStorage b_CCVS_E_4;	/* CCVS-E-4 */
  private CobolDataStorage b_XXINFO;	/* XXINFO */
  private CobolDataStorage b_HYPHEN_LINE;	/* HYPHEN-LINE */
  private CobolDataStorage b_CCVS_PGM_ID;	/* CCVS-PGM-ID */
  private CobolDataStorage b_WORK$39__CCVS_C_1;
  private CobolDataStorage b_WORK$40__CCVS_C_1;
  private CobolDataStorage b_WORK$41__CCVS_C_2;
  private CobolDataStorage b_WORK$42__CCVS_C_2;
  private CobolDataStorage b_WORK$43__CCVS_C_2;
  private CobolDataStorage b_WORK$44__CCVS_C_2;
  private CobolDataStorage b_WORK$45__CCVS_C_2;
  private CobolDataStorage b_ID_AGAIN__CCVS_E_1;
  private CobolDataStorage b_WORK$62__CCVS_E_1;
  private CobolDataStorage b_WORK$63__CCVS_E_1;
  private CobolDataStorage b_WORK$64__CCVS_E_1;
  private CobolDataStorage b_CCVS_E_2_2__CCVS_E_2;
  private CobolDataStorage b_ENDER_DESC__CCVS_E_2_2__CCVS_E_2;
  private CobolDataStorage b_ERROR_TOTAL__CCVS_E_2_2__CCVS_E_2;
  private CobolDataStorage b_WORK$65__CCVS_E_2;
  private CobolDataStorage b_WORK$66__CCVS_E_2;
  private CobolDataStorage b_WORK$67__CCVS_E_2_2__CCVS_E_2;
  private CobolDataStorage b_WORK$68__CCVS_E_3;
  private CobolDataStorage b_WORK$69__CCVS_E_3;
  private CobolDataStorage b_WORK$70__CCVS_E_3;
  private CobolDataStorage b_WORK$71__CCVS_E_3;
  private CobolDataStorage b_WORK$72__CCVS_E_3;
  private CobolDataStorage b_CCVS_E_4_1__CCVS_E_4;
  private CobolDataStorage b_CCVS_E_4_2__CCVS_E_4;
  private CobolDataStorage b_WORK$73__CCVS_E_4;
  private CobolDataStorage b_WORK$74__CCVS_E_4;
  private CobolDataStorage b_WORK$46__CCVS_H_1;
  private CobolDataStorage b_WORK$47__CCVS_H_1;
  private CobolDataStorage b_WORK$48__CCVS_H_1;
  private CobolDataStorage b_WORK$49__CCVS_H_2A;
  private CobolDataStorage b_WORK$50__CCVS_H_2A;
  private CobolDataStorage b_WORK$51__CCVS_H_2A;
  private CobolDataStorage b_WORK$52__CCVS_H_2A;
  private CobolDataStorage b_WORK$53__CCVS_H_2A;
  private CobolDataStorage b_TEST_ID__CCVS_H_2B;
  private CobolDataStorage b_WORK$54__CCVS_H_2B;
  private CobolDataStorage b_WORK$55__CCVS_H_2B;
  private CobolDataStorage b_WORK$56__CCVS_H_2B;
  private CobolDataStorage b_WORK$57__CCVS_H_2B;
  private CobolDataStorage b_WORK$58__CCVS_H_2B;
  private CobolDataStorage b_WORK$59__CCVS_H_3;
  private CobolDataStorage b_WORK$60__CCVS_H_3;
  private CobolDataStorage b_WORK$61__CCVS_H_3;
  private CobolDataStorage b_CHARS_OR_RECORDS__FILE_RECORD_INFO_P1_120__FILE_RECORD_INFO__FILE_RECORD_INFORMATION_REC;
  private CobolDataStorage b_FILE_RECORD_INFO__FILE_RECORD_INFORMATION_REC;
  private CobolDataStorage b_FILE_RECORD_INFO_P1_120__FILE_RECORD_INFO__FILE_RECORD_INFORMATION_REC;
  private CobolDataStorage b_FILE_RECORD_INFO_P121_240__FILE_RECORD_INFO__FILE_RECORD_INFORMATION_REC;
  private CobolDataStorage b_FILE_RECORD_INFO_SKELETON__FILE_RECORD_INFORMATION_REC;
  private CobolDataStorage b_ODO_NUMBER__FILE_RECORD_INFO_P1_120__FILE_RECORD_INFO__FILE_RECORD_INFORMATION_REC;
  private CobolDataStorage b_RECORDS_IN_FILE__FILE_RECORD_INFO_P1_120__FILE_RECORD_INFO__FILE_RECORD_INFORMATION_REC;
  private CobolDataStorage b_REELUNIT_NUMBER__FILE_RECORD_INFO_P1_120__FILE_RECORD_INFO__FILE_RECORD_INFORMATION_REC;
  private CobolDataStorage b_UPDATE_NUMBER__FILE_RECORD_INFO_P1_120__FILE_RECORD_INFO__FILE_RECORD_INFORMATION_REC;
  private CobolDataStorage b_WORK$12__FILE_RECORD_INFO_P1_120__FILE_RECORD_INFO__FILE_RECORD_INFORMATION_REC;
  private CobolDataStorage b_WORK$13__FILE_RECORD_INFO_P1_120__FILE_RECORD_INFO__FILE_RECORD_INFORMATION_REC;
  private CobolDataStorage b_WORK$14__FILE_RECORD_INFO_P1_120__FILE_RECORD_INFO__FILE_RECORD_INFORMATION_REC;
  private CobolDataStorage b_WORK$15__FILE_RECORD_INFO_P1_120__FILE_RECORD_INFO__FILE_RECORD_INFORMATION_REC;
  private CobolDataStorage b_WORK$17__FILE_RECORD_INFO_P1_120__FILE_RECORD_INFO__FILE_RECORD_INFORMATION_REC;
  private CobolDataStorage b_WORK$19__FILE_RECORD_INFO_P1_120__FILE_RECORD_INFO__FILE_RECORD_INFORMATION_REC;
  private CobolDataStorage b_WORK$2__FILE_RECORD_INFO_SKELETON__FILE_RECORD_INFORMATION_REC;
  private CobolDataStorage b_WORK$20__FILE_RECORD_INFO_P1_120__FILE_RECORD_INFO__FILE_RECORD_INFORMATION_REC;
  private CobolDataStorage b_WORK$3__FILE_RECORD_INFO_SKELETON__FILE_RECORD_INFORMATION_REC;
  private CobolDataStorage b_WORK$4__FILE_RECORD_INFO_SKELETON__FILE_RECORD_INFORMATION_REC;
  private CobolDataStorage b_WORK$5__FILE_RECORD_INFO_SKELETON__FILE_RECORD_INFORMATION_REC;
  private CobolDataStorage b_WORK$6__FILE_RECORD_INFO_SKELETON__FILE_RECORD_INFORMATION_REC;
  private CobolDataStorage b_WORK$7__FILE_RECORD_INFO_SKELETON__FILE_RECORD_INFORMATION_REC;
  private CobolDataStorage b_WORK$8__FILE_RECORD_INFO_SKELETON__FILE_RECORD_INFORMATION_REC;
  private CobolDataStorage b_WORK$9__FILE_RECORD_INFO_P1_120__FILE_RECORD_INFO__FILE_RECORD_INFORMATION_REC;
  private CobolDataStorage b_XBLOCK_SIZE__FILE_RECORD_INFO_P1_120__FILE_RECORD_INFO__FILE_RECORD_INFORMATION_REC;
  private CobolDataStorage b_XFILE_NAME__FILE_RECORD_INFO_P1_120__FILE_RECORD_INFO__FILE_RECORD_INFORMATION_REC;
  private CobolDataStorage b_XFILE_ORGANIZATION__FILE_RECORD_INFO_P1_120__FILE_RECORD_INFO__FILE_RECORD_INFORMATION_REC;
  private CobolDataStorage b_XLABEL_TYPE__FILE_RECORD_INFO_P1_120__FILE_RECORD_INFO__FILE_RECORD_INFORMATION_REC;
  private CobolDataStorage b_XPROGRAM_NAME__FILE_RECORD_INFO_P1_120__FILE_RECORD_INFO__FILE_RECORD_INFORMATION_REC;
  private CobolDataStorage b_XRECORD_LENGTH__FILE_RECORD_INFO_P1_120__FILE_RECORD_INFO__FILE_RECORD_INFORMATION_REC;
  private CobolDataStorage b_XRECORD_NAME__FILE_RECORD_INFO_P1_120__FILE_RECORD_INFO__FILE_RECORD_INFORMATION_REC;
  private CobolDataStorage b_XRECORD_NUMBER__FILE_RECORD_INFO_P1_120__FILE_RECORD_INFO__FILE_RECORD_INFORMATION_REC;
  private CobolDataStorage b_WORK$78__HYPHEN_LINE;
  private CobolDataStorage b_WORK$79__HYPHEN_LINE;
  private CobolDataStorage b_WORK$80__HYPHEN_LINE;
  private CobolDataStorage b_DUMMY_RECORD;
  private CobolDataStorage b_PRINT_REC;
  private CobolDataStorage b_RL_FS2R1_F_G_120;
  private CobolDataStorage b_COMPUTED_A__COMPUTED_X__TEST_COMPUTED;
  private CobolDataStorage b_COMPUTED_X__TEST_COMPUTED;
  private CobolDataStorage b_WORK$31__TEST_COMPUTED;
  private CobolDataStorage b_WORK$32__TEST_COMPUTED;
  private CobolDataStorage b_WORK$34__COMPUTED_X__TEST_COMPUTED;
  private CobolDataStorage b_COR_ANSI_REFERENCE__CORRECT_X__TEST_CORRECT;
  private CobolDataStorage b_CORRECT_18V0__CR_18V0__CORRECT_X__TEST_CORRECT;
  private CobolDataStorage b_CORRECT_A__CORRECT_X__TEST_CORRECT;
  private CobolDataStorage b_CORRECT_X__TEST_CORRECT;
  private CobolDataStorage b_WORK$35__TEST_CORRECT;
  private CobolDataStorage b_WORK$36__TEST_CORRECT;
  private CobolDataStorage b_WORK$38__CORRECT_X__TEST_CORRECT;
  private CobolDataStorage b_DOTVALUE__PAR_NAME__TEST_RESULTS;
  private CobolDataStorage b_FEATURE__TEST_RESULTS;
  private CobolDataStorage b_P_OR_F__TEST_RESULTS;
  private CobolDataStorage b_PAR_NAME__TEST_RESULTS;
  private CobolDataStorage b_PARDOT_X__PAR_NAME__TEST_RESULTS;
  private CobolDataStorage b_RE_MARK__TEST_RESULTS;
  private CobolDataStorage b_WORK$26__TEST_RESULTS;
  private CobolDataStorage b_WORK$27__TEST_RESULTS;
  private CobolDataStorage b_WORK$28__TEST_RESULTS;
  private CobolDataStorage b_WORK$29__PAR_NAME__TEST_RESULTS;
  private CobolDataStorage b_WORK$30__TEST_RESULTS;
  private CobolDataStorage b_INF_ANSI_REFERENCE__XXINFO;
  private CobolDataStorage b_INFO_TEXT__XXINFO;
  private CobolDataStorage b_WORK$75__XXINFO;
  private CobolDataStorage b_WORK$76__INFO_TEXT__XXINFO;
  private CobolDataStorage b_WORK$77__INFO_TEXT__XXINFO;
  private CobolDataStorage b_XXCOMPUTED__INFO_TEXT__XXINFO;
  private CobolDataStorage b_XXCORRECT__INFO_TEXT__XXINFO;

  /* End of data storage */


  /* Fields */

  /* PROGRAM-ID : RL101A */
  private AbstractCobolField f_PRINT_REC;	/* PRINT-REC */
  private AbstractCobolField f_DUMMY_RECORD;	/* DUMMY-RECORD */
  private AbstractCobolField f_PRINT_FILE_record;	/* PRINT-FILE_record */
  private AbstractCobolField f_RL_FS2R1_F_G_120;	/* RL-FS2R1-F-G-120 */
  private AbstractCobolField f_RL_FS2_record;	/* RL-FS2_record */
  private AbstractCobolField f_RL_FS2_STATUS;	/* RL-FS2-STATUS */
  private AbstractCobolField f_WRK_CS_09V00;	/* WRK-CS-09V00 */
  private AbstractCobolField f_TEST_RESULTS;	/* TEST-RESULTS */
  private AbstractCobolField f_RE_MARK__TEST_RESULTS;	/* RE-MARK */
  private AbstractCobolField f_TEST_COMPUTED;	/* TEST-COMPUTED */
  private AbstractCobolField f_COMPUTED_X__TEST_COMPUTED;	/* COMPUTED-X */
  private AbstractCobolField f_COMPUTED_A__COMPUTED_X__TEST_COMPUTED;	/* COMPUTED-A */
  private AbstractCobolField f_TEST_CORRECT;	/* TEST-CORRECT */
  private AbstractCobolField f_CORRECT_X__TEST_CORRECT;	/* CORRECT-X */
  private AbstractCobolField f_CORRECT_A__CORRECT_X__TEST_CORRECT;	/* CORRECT-A */
  private AbstractCobolField f_CORRECT_18V0__CR_18V0__CORRECT_X__TEST_CORRECT;	/* CORRECT-18V0 */
  private AbstractCobolField f_CCVS_C_1;	/* CCVS-C-1 */
  private AbstractCobolField f_REC_SKL_SUB;	/* REC-SKL-SUB */
  private AbstractCobolField f_DELETE_COUNTER;	/* DELETE-COUNTER */
  private AbstractCobolField f_ERROR_COUNTER;	/* ERROR-COUNTER */
  private AbstractCobolField f_INSPECT_COUNTER;	/* INSPECT-COUNTER */
  private AbstractCobolField f_PASS_COUNTER;	/* PASS-COUNTER */
  private AbstractCobolField f_ERROR_HOLD;	/* ERROR-HOLD */
  private AbstractCobolField f_RECORD_COUNT;	/* RECORD-COUNT */
  private AbstractCobolField f_CCVS_E_2;	/* CCVS-E-2 */
  private AbstractCobolField f_ENDER_DESC__CCVS_E_2_2__CCVS_E_2;	/* ENDER-DESC */
  private AbstractCobolField f_INFO_TEXT__XXINFO;	/* INFO-TEXT */

  /* End of fields */


  private static AbstractCobolField f_native;

  /* Constants */

  private AbstractCobolField c_11_MORE;
  private AbstractCobolField c_10_BOUNDARY;
  private AbstractCobolField c_9_000001;
  private AbstractCobolField c_8_NO;
  private AbstractCobolField c_7_TEST;
  private AbstractCobolField c_6_TEST;
  private AbstractCobolField c_5_TEST;
  private AbstractCobolField c_4;
  private AbstractCobolField c_3_1;
  private AbstractCobolField c_2_XXXXX021;
  private AbstractCobolField c_1_report;

  /* Attributes */

  private CobolFieldAttribute a_9;
  private CobolFieldAttribute a_8;
  private CobolFieldAttribute a_7;
  private CobolFieldAttribute a_6;
  private CobolFieldAttribute a_5;
  private CobolFieldAttribute a_4;
  private CobolFieldAttribute a_3;
  private CobolFieldAttribute a_2;
  private CobolFieldAttribute a_1;



  /* String literals */
  public static final byte[] str_60_MORE = CobolUtil.stringToBytes("MORE THAN 500 RECORDS");
  public static final byte[] str_59_BOUNDARY = CobolUtil.stringToBytes("BOUNDARY VIOLATION");
  public static final byte[] str_58_NO = CobolUtil.stringToBytes("NO FURTHER INFORMATION, SEE PROGRAM.");
  public static final byte[] str_57_TEST = CobolUtil.stringToBytes("TEST(S) REQUIRE INSPECTION");
  public static final byte[] str_56_TEST = CobolUtil.stringToBytes("TEST(S) DELETED     ");
  public static final byte[] str_55_TEST = CobolUtil.stringToBytes("TEST(S) FAILED");
  public static final byte[] str_54 = CobolUtil.stringToBytes("****TEST DELETED****");
  public static final byte[] str_53_XXXXX021 = CobolUtil.stringToBytes("XXXXX021");
  public static final byte[] str_52_report = CobolUtil.stringToBytes("report.log");
  public static final byte[] str_51_FILE = CobolUtil.stringToBytes("FILE VERIFIED, LFILE");
  public static final byte[] str_50_REL = CobolUtil.stringToBytes("REL-TEST-002          ");
  public static final byte[] str_49_FILE = CobolUtil.stringToBytes("FILE CREATED, LFILE ");
  public static final byte[] str_48_REL = CobolUtil.stringToBytes("REL-TEST-001          ");
  public static final byte[] str_47_000001 = CobolUtil.stringToBytes("000001");
  public static final byte[] str_46_RL = CobolUtil.stringToBytes("RL");
  public static final byte[] str_45_000500 = CobolUtil.stringToBytes("000500");
  public static final byte[] str_44_0001 = CobolUtil.stringToBytes("0001");
  public static final byte[] str_43_RC = CobolUtil.stringToBytes("RC");
  public static final byte[] str_42_000120 = CobolUtil.stringToBytes("000120");
  public static final byte[] str_41_R1 = CobolUtil.stringToBytes("R1-F-G");
  public static final byte[] str_40_RL = CobolUtil.stringToBytes("RL-FS2");
  public static final byte[] str_39_FILE = CobolUtil.stringToBytes("FILE CREATE RL-FS2  ");
  public static final byte[] str_38_NO = CobolUtil.stringToBytes("NO ");
  public static final byte[] str_37_NO = CobolUtil.stringToBytes("NO ");
  public static final byte[] str_36_NO = CobolUtil.stringToBytes("NO ");
  public static final byte[] str_35_FAIL = CobolUtil.stringToBytes("FAIL*");
  public static final byte[] str_34_FAIL = CobolUtil.stringToBytes("FAIL*");
  public static final byte[] str_33_PASS = CobolUtil.stringToBytes("PASS ");
  public static final byte[] str_32_INSPT = CobolUtil.stringToBytes("INSPT");
  public static final byte[] str_31_RL101A = CobolUtil.stringToBytes("RL101A");
  public static final byte[] str_30 = CobolUtil.stringToBytes("*** INFORMATION ");
  public static final byte[] str_29 = CobolUtil.stringToBytes("  TESTS WERE EXECUTED SUCCESSFULLY");
  public static final byte[] str_28 = CobolUtil.stringToBytes(" OF ");
  public static final byte[] str_27 = CobolUtil.stringToBytes(" COPYRIGHT 1985");
  public static final byte[] str_26_ON = CobolUtil.stringToBytes("ON-SITE VALIDATION, NATIONAL INSTITUTE OF STD & TECH.");
  public static final byte[] str_25 = CobolUtil.stringToBytes(" FOR OFFICIAL USE ONLY");
  public static final byte[] str_24_ERRORS = CobolUtil.stringToBytes("ERRORS ENCOUNTERED");
  public static final byte[] str_23_END = CobolUtil.stringToBytes("END OF TEST-  ");
  public static final byte[] str_22 = CobolUtil.stringToBytes("  COPYRIGHT   1985");
  public static final byte[] str_21_COBOL = CobolUtil.stringToBytes("COBOL 85 VERSION 4.2, Apr  1993 SSVG");
  public static final byte[] str_20 = CobolUtil.stringToBytes(" FOR OFFICIAL USE ONLY");
  public static final byte[] str_19_ON = CobolUtil.stringToBytes("ON-SITE VALIDATION, NATIONAL INSTITUTE OF STD & TECH.");
  public static final byte[] str_18 = CobolUtil.stringToBytes(" LEVEL VALIDATION FOR ");
  public static final byte[] str_17 = CobolUtil.stringToBytes(" HIGH");
  public static final byte[] str_16 = CobolUtil.stringToBytes(" IN ");
  public static final byte[] str_15_TEST = CobolUtil.stringToBytes("TEST RESULT OF ");
  public static final byte[] str_14 = CobolUtil.stringToBytes(" COPY - NOT FOR DISTRIBUTION");
  public static final byte[] str_13_4 = CobolUtil.stringToBytes("4.2 ");
  public static final byte[] str_12_CCVS85 = CobolUtil.stringToBytes("CCVS85 ");
  public static final byte[] str_11_OFFICIAL = CobolUtil.stringToBytes("OFFICIAL COBOL COMPILER VALIDATION SYSTEM ");
  public static final byte[] str_10_FAIL = CobolUtil.stringToBytes("FAIL");
  public static final byte[] str_9_TESTED = CobolUtil.stringToBytes("TESTED");
  public static final byte[] str_8 = CobolUtil.stringToBytes(" FEATURE              PASS  PARAGRAPH-NAME                                                 REMARKS ");
  public static final byte[] str_7 = CobolUtil.stringToBytes("       CORRECT = ");
  public static final byte[] str_6 = CobolUtil.stringToBytes("       COMPUTED= ");
  public static final byte[] str_5 = CobolUtil.stringToBytes(",ALTKEY2=");
  public static final byte[] str_4 = CobolUtil.stringToBytes(",ALTKEY1=");
  public static final byte[] str_3 = CobolUtil.stringToBytes(",RECKEY=");
  public static final byte[] str_2 = CobolUtil.stringToBytes(",LFIL=000000,ORG=  ,LBLR= ");
  public static final byte[] str_1 = CobolUtil.stringToBytes(",ODO=0000,PGM=     ,LRECL=000000,BLKSIZ  =");
  public static final byte[] str_0_FILE = CobolUtil.stringToBytes("FILE=      ,RECORD=      /0,RECNO=000000,UPDT=00");
  /* File PRINT-FILE */
  private CobolFile		h_PRINT_FILE = null;
  private byte[]	h_PRINT_FILE_status = new byte[4];
  /* File RL-FS2 */
  private CobolFileKey[]	k_RL_FS2 = null;
  private CobolFile		h_RL_FS2 = null;
  private byte[]	h_RL_FS2_status = new byte[4];

  /* Sections and Labels */
  private final static int l_RL101A = 1;
  private final static int l_CCVS1 = 2;
  private final static int l_CCVS1__OPEN_FILES = 3;
  private final static int l_CCVS1__CCVS_INIT_FILE = 4;
  private final static int l_CCVS1__CCVS_INIT_EXIT = 5;
  private final static int l_CCVS1__CLOSE_FILES = 6;
  private final static int l_CCVS1__TERMINATE_CCVS = 7;
  private final static int l_CCVS1__INSPT = 8;
  private final static int l_CCVS1__PASS = 9;
  private final static int l_CCVS1__FAIL = 10;
  private final static int l_CCVS1__DE_LETE = 11;
  private final static int l_CCVS1__PRINT_DETAIL = 12;
  private final static int l_CCVS1__HEAD_ROUTINE = 13;
  private final static int l_CCVS1__COLUMN_NAMES_ROUTINE = 14;
  private final static int l_CCVS1__END_ROUTINE = 15;
  private final static int l_CCVS1__END_RTN_EXIT = 16;
  private final static int l_CCVS1__END_ROUTINE_1 = 17;
  private final static int l_CCVS1__END_ROUTINE_12 = 18;
  private final static int l_CCVS1__END_ROUTINE_13 = 19;
  private final static int l_CCVS1__WRITE_LINE = 20;
  private final static int l_CCVS1__WRT_LN = 21;
  private final static int l_CCVS1__BLANK_LINE_PRINT = 22;
  private final static int l_CCVS1__FAIL_ROUTINE = 23;
  private final static int l_CCVS1__FAIL_ROUTINE_WRITE = 24;
  private final static int l_CCVS1__FAIL_ROUTINE_EX = 25;
  private final static int l_CCVS1__BAIL_OUT = 26;
  private final static int l_CCVS1__BAIL_OUT_WRITE = 27;
  private final static int l_CCVS1__BAIL_OUT_EX = 28;
  private final static int l_CCVS1__CCVS1_EXIT = 29;
  private final static int l_SECT_RL101_001 = 30;
  private final static int l_SECT_RL101_001__REL_INIT_001 = 31;
  private final static int l_SECT_RL101_001__REL_TEST_001 = 32;
  private final static int l_SECT_RL101_001__REL_DELETE_001 = 33;
  private final static int l_SECT_RL101_001__REL_FAIL_001 = 34;
  private final static int l_SECT_RL101_001__REL_WRITE_001 = 35;
  private final static int l_SECT_RL101_001__REL_INIT_002 = 36;
  private final static int l_SECT_RL101_001__REL_TEST_002 = 37;
  private final static int l_SECT_RL101_001__REL_DELETE_002 = 38;
  private final static int l_SECT_RL101_001__REL_TEST_002_1 = 39;
  private final static int l_SECT_RL101_001__REL_WRITE_002 = 40;
  private final static int l_CCVS_EXIT = 41;
  private final static int l_CCVS_EXIT__CCVS_999999 = 42;
  private final static int l_Default_Error_Handler = 43;

}
